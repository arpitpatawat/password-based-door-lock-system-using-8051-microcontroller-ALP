A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 15:05:05 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

                       2     ;--------------------------------

0000                   3     MAIN:

0000 111A              4     ACALL LCD_INIT ; initialize LCD

0002 900506            5     MOV DPTR,#INITIAL_MSG ;DPTR point to 'PASSWORD' text

0005 1129              6     ACALL SEND_DAT ;DISPLAY inital TEXT

0007 1135              7     ACALL DELAY ;GIVE DELAY OF ___ SECONDS  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

0009 312D              8     ACALL LINE2

000B 113E              9     ACALL READ_KEYPRESS ;

000D 1135             10     ACALL DELAY

000F 111A             11     ACALL LCD_INIT

0011 900517           12     MOV DPTR, #CHECK_CODE_MSG

0014 1129             13     ACALL SEND_DAT

0016 114D             14     ACALL CHECK_PASSWORD  

0018 80E6             15     SJMP MAIN 

                      16     ;---------------------------------

001A 900500           17     LCD_INIT:MOV DPTR,#MYCOM

001D E4               18     C1:CLR A

001E 93               19     MOVC A,@A+DPTR

001F 6007             20     JZ DAT

0021 3113             21     ACALL COMNWRT

0023 1135             22     ACALL  DELAY

0025 A3               23     INC DPTR

0026 80F5             24     SJMP C1

0028 22               25     DAT:RET

                      26     ;---------------------------------

0029                  27     SEND_DAT:  

0029 E4               28     CLR A

002A 93               29     MOVC A,@A+DPTR

002B 6007             30     JZ AGAIN

002D 3120             31     ACALL DATAWRT

002F 1135             32     ACALL DELAY

0031 A3               33     INC DPTR

0032 80F5             34     SJMP SEND_DAT

0034 22               35     AGAIN: RET

                      36     ;---------------------------------

0035 7B32             37     DELAY: MOV R3,#50

0037 7CFF             38     HERE2: MOV R4,#255

0039 DCFE             39     HERE: DJNZ R4,HERE

003B DBFA             40     DJNZ R3,HERE2

003D 22               41     RET

                      42     ;--------------------------------- 

003E                  43     READ_KEYPRESS:

003E 7805             44     MOV R0,#5D  ; R0 = 5

0040 79A0             45     MOV R1,#160D ; R1= 160

0042 119F             46     ROTATE:ACALL KEY_SCAN

0044 F7               47     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

0045 3120             48     ACALL DATAWRT ; display the key on LCD

0047 3132             49     ACALL DELAY2 ; delay

0049 09               50     INC R1

004A D8F6             51     DJNZ R0,ROTATE ;repeat this process for 5 time

004C 22               52     RET

                      53     ;----------------------------------

004D 7805             54     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

004F 79A0             55     MOV R1,#160D ; R1= 160

0051 900528           56     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

0054 E4               57     RPT:CLR A ; A = 0

A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 15:05:05 PAGE     2

0055 93               58     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

0056 67               59     XRL A,@R1 ; XOR with the actual password

                      60     ;if both the numbers are equal then A = 0;

0057 702D             61     JNZ FAIL ; jump to FAIL where we decide what will happen

0059 09               62     INC R1

005A A3               63     INC DPTR

005B D8F7             64     DJNZ R0,RPT ;repeat this process for 5 times

005D 111A             65     ACALL LCD_INIT

005F 900547           66     MOV DPTR,#TEXT_S1

0062 1129             67     ACALL SEND_DAT ;display corret password

0064 1135             68     ACALL DELAY

0066 312D             69     ACALL LINE2

0068 900556           70     MOV DPTR,#TEXT_S2

006B 1129             71     ACALL SEND_DAT ;display corret password

006D 1135             72     ACALL DELAY

006F D2A3             73     SETB P2.3

0071 C2A4             74     CLR P2.4

0073 3132             75     ACALL DELAY2

0075 111A             76     ACALL LCD_INIT

0077 900563           77     MOV DPTR, #TEXT_S3

007A 1129             78     ACALL SEND_DAT

007C 1135             79     ACALL DELAY

007E C2A3             80     CLR P2.3

0080 D2A4             81     SETB P2.4

0082 3132             82     ACALL DELAY2

0084 8018             83     SJMP GOBACK

0086 111A             84     FAIL:ACALL LCD_INIT

0088 90052E           85     MOV DPTR,#TEXT_F1 

008B 1129             86     ACALL SEND_DAT ;display incorrect text

008D 3132             87     ACALL DELAY2

008F 312D             88     ACALL LINE2

0091 900539           89     MOV DPTR, #TEXT_F2

0094 1129             90     ACALL SEND_DAT ;display incorrect text

0096 3132             91     ACALL DELAY2

0098 C2A3             92     CLR P2.3 

009A C2A4             93     CLR P2.4 ; send 0 to the Driver motor

009C 1100             94     ACALL MAIN ;go to main funtion

009E 22               95     GOBACK:RET

                      96     

                      97     ;--------------------------------------------------

                      98     ;algorithm to check for key scan

009F 7590FF           99     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                     100     ;CHECKING FOR ROW 1 COLUMN 1

00A2 C290            101     CLR P1.0  ;first row checking #11111110

00A4 209403          102     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

00A7 7437            103     MOV A,#55D ; if above fails then 7 is pressed , A =7

00A9 22              104     RET 

                     105     

00AA 209503          106     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

00AD 7438            107     MOV A,#56D ; A = 8

00AF 22              108     RET

                     109     

00B0 209603          110     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

00B3 7439            111     MOV A,#57D ; A=9                  

00B5 22              112     RET

                     113     

00B6 209703          114     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

00B9 742F            115     MOV A,#47D  ; A=/ DIVIDE

00BB 22              116     RET

                     117     

00BC D290            118     NEXT4:SETB P1.0 ; ROW 1 IS RESET

00BE C291            119     CLR P1.1 ;CHEKC FOR ROW 2

00C0 209403          120     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

00C3 7434            121     MOV A,#52D ; A = 4

00C5 22              122     RET

                     123     

A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 15:05:05 PAGE     3

00C6 209503          124     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

00C9 7435            125     MOV A,#53D      ;A = 5

00CB 22              126     RET

                     127     

00CC 209603          128     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

00CF 7436            129     MOV A,#54D ;A = 6

00D1 22              130     RET

                     131     

00D2 209703          132     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

00D5 742A            133     MOV A,#42D ; A = * 

00D7 22              134     RET

                     135     

00D8 D291            136     NEXT8:SETB P1.1 ;ROW IS RESET

00DA C292            137     CLR P1.2 ; CHECK FOR ROW 3

00DC 209403          138     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

00DF 7431            139     MOV A,#49D  ;A = 1

00E1 22              140     RET

                     141     

00E2 209503          142     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

00E5 7432            143     MOV A,#50D ;A =2 

00E7 22              144     RET

                     145     

00E8 209603          146     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

00EB 7433            147     MOV A,#51D ;A = 3

00ED 22              148     RET

                     149     

00EE 209703          150     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

00F1 742D            151     MOV A,#45D ;A = -

00F3 22              152     RET

                     153     

00F4 D292            154     NEXT12:SETB P1.2 ; ROW 3 IS RESET

00F6 C293            155     CLR P1.3 ; CHECK FOR ROW 4

00F8 209403          156     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

00FB 7443            157     MOV A,#67D ; A = C

00FD 22              158     RET

                     159     

00FE 209503          160     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

0101 7430            161     MOV A,#48D ; A = 0

0103 22              162     RET

                     163     

0104 209603          164     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

0107 743D            165     MOV A,#61D       ; A = '='

0109 22              166     RET

                     167     

010A 209703          168     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

010D 742B            169     MOV A,#43D ; A = +

010F 22              170     RET

0110 02009F          171     NEXT16:LJMP KEY_SCAN ; again check for keys

                     172     ;!!!!!!!!!!!!!!!!!!!!!!!!!!CHECK FOR SJMP OPTION

                     173     ;-----------------------------------------------

                     174     

0113 F5B0            175     COMNWRT:MOV P3,A

0115 C2A0            176     CLR P2.0

0117 C2A1            177     CLR P2.1

0119 D2A2            178     SETB P2.2

011B 1135            179     ACALL DELAY

011D C2A2            180     CLR P2.2

011F 22              181     RET

                     182     

0120 F5B0            183     DATAWRT: MOV P3,A

0122 D2A0            184     SETB P2.0

0124 C2A1            185     CLR P2.1

0126 D2A2            186     SETB P2.2

0128 1135            187     ACALL DELAY

012A C2A2            188     CLR P2.2

012C 22              189     RET

A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 15:05:05 PAGE     4

                     190     

012D 74C0            191     LINE2: MOV A,#0C0H

012F 3113            192     ACALL COMNWRT

0131 22              193     RET

                     194     

                     195     

                     196     

0132 7BFA            197     DELAY2: MOV R3,#250D

0134 758901          198              MOV TMOD,#01

0137 758CFC          199     BACK2:   MOV TH0,#0FCH 

013A 758A18          200             MOV TL0,#018H 

013D D28C            201             SETB TR0 

013F 308DFD          202     HERE5:  JNB TF0,HERE5

0142 C28C            203             CLR TR0 

0144 C28D            204             CLR TF0 

0146 DBEF            205             DJNZ R3,BACK2

0148 22              206             RET       

                     207     

0149 7401            208     CLRSCR: MOV A,#01H

014B 3113            209     ACALL COMNWRT

014D 22              210     RET

                     211     

0500                 212     ORG 500H

0500 380E0106        213     MYCOM: DB 38H,0EH,01,06,80H,0;  ;REPLACE 80 IF NEEDED

0504 8000                    
                     214     ;initialize, display on curson blinking, clear display screen,

                     215     ;shift cursor to right, move to line 1, 

0506 454E5445        216     INITIAL_MSG:   DB "ENTER 5-DIG.CODE",0

050A 5220352D                
050E 4449472E                
0512 434F4445                
0516 00                      
0517 43484543        217     CHECK_CODE_MSG:  DB "CHECKING CODE...",0        

051B 4B494E47                
051F 20434F44                
0523 452E2E2E                
0527 00                      
0528 31323334        218     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

052C 3500                    
052E 57524F4E        219     TEXT_F1: DB "WRONG CODE",0

0532 4720434F                
0536 444500                  
0539 41434345        220     TEXT_F2: DB "ACCESS DENIED",0

053D 53532044                
0541 454E4945                
0545 4400                    
0547 41434345        221     TEXT_S1: DB "ACCESS GRANTED",0

054B 53532047                
054F 52414E54                
0553 454400                  
0556 4F50454E        222     TEXT_S2: DB "OPENING DOOR",0

055A 494E4720                
055E 444F4F52                
0562 00                      
0563 434C4F53        223     TEXT_S3: DB "CLOSING DOOR", 0

0567 494E4720                
056B 444F4F52                
056F 00                      
                     224     END

A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 15:05:05 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   0034H   A   
BACK2. . . . . . .  C ADDR   0137H   A   
C1 . . . . . . . .  C ADDR   001DH   A   
CHECK_CODE_MSG . .  C ADDR   0517H   A   
CHECK_PASSWORD . .  C ADDR   004DH   A   
CLRSCR . . . . . .  C ADDR   0149H   A   
COMNWRT. . . . . .  C ADDR   0113H   A   
DAT. . . . . . . .  C ADDR   0028H   A   
DATAWRT. . . . . .  C ADDR   0120H   A   
DELAY. . . . . . .  C ADDR   0035H   A   
DELAY2 . . . . . .  C ADDR   0132H   A   
FAIL . . . . . . .  C ADDR   0086H   A   
GOBACK . . . . . .  C ADDR   009EH   A   
HERE . . . . . . .  C ADDR   0039H   A   
HERE2. . . . . . .  C ADDR   0037H   A   
HERE5. . . . . . .  C ADDR   013FH   A   
INITIAL_MSG. . . .  C ADDR   0506H   A   
KEY_SCAN . . . . .  C ADDR   009FH   A   
LCD_INIT . . . . .  C ADDR   001AH   A   
LINE2. . . . . . .  C ADDR   012DH   A   
MAIN . . . . . . .  C ADDR   0000H   A   
MYCOM. . . . . . .  C ADDR   0500H   A   
NEXT1. . . . . . .  C ADDR   00AAH   A   
NEXT10 . . . . . .  C ADDR   00E8H   A   
NEXT11 . . . . . .  C ADDR   00EEH   A   
NEXT12 . . . . . .  C ADDR   00F4H   A   
NEXT13 . . . . . .  C ADDR   00FEH   A   
NEXT14 . . . . . .  C ADDR   0104H   A   
NEXT15 . . . . . .  C ADDR   010AH   A   
NEXT16 . . . . . .  C ADDR   0110H   A   
NEXT2. . . . . . .  C ADDR   00B0H   A   
NEXT3. . . . . . .  C ADDR   00B6H   A   
NEXT4. . . . . . .  C ADDR   00BCH   A   
NEXT5. . . . . . .  C ADDR   00C6H   A   
NEXT6. . . . . . .  C ADDR   00CCH   A   
NEXT7. . . . . . .  C ADDR   00D2H   A   
NEXT8. . . . . . .  C ADDR   00D8H   A   
NEXT9. . . . . . .  C ADDR   00E2H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0528H   A   
READ_KEYPRESS. . .  C ADDR   003EH   A   
ROTATE . . . . . .  C ADDR   0042H   A   
RPT. . . . . . . .  C ADDR   0054H   A   
SEND_DAT . . . . .  C ADDR   0029H   A   
TEXT_F1. . . . . .  C ADDR   052EH   A   
TEXT_F2. . . . . .  C ADDR   0539H   A   
TEXT_S1. . . . . .  C ADDR   0547H   A   
TEXT_S2. . . . . .  C ADDR   0556H   A   
TEXT_S3. . . . . .  C ADDR   0563H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
