A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 13:26:33 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

                       2     ;--------------------------------

0000                   3     MAIN:

0000 1111              4     ACALL LCD_INIT ; initialize LCD

0002 900506            5     MOV DPTR,#MYDATA ;DPTR point to 'PASSWORD' text

0005 1120              6     ACALL SEND_DAT ;DISPLAY inital TEXT

0007 112C              7     ACALL DELAY ;GIVE DELAY OF ___ SECONDS  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

0009 1135              8     ACALL READ_KEYPRESS ;

000B 112C              9     ACALL DELAY

000D 1144             10     ACALL CHECK_PASSWORD  

000F 80EF             11     SJMP MAIN 

                      12     ;---------------------------------

0011 900500           13     LCD_INIT:MOV DPTR,#MYCOM

0014 E4               14     C1:CLR A

0015 93               15     MOVC A,@A+DPTR

0016 11EF             16     ACALL COMNWRT

0018 112C             17     ACALL  DELAY

001A A3               18     INC DPTR

001B 6002             19     JZ DAT

001D 80F5             20     SJMP C1

001F 22               21     DAT:RET

                      22     ;---------------------------------

0020                  23     SEND_DAT:  

0020 E4               24     CLR A

0021 93               25     MOVC A,@A+DPTR

0022 11FC             26     ACALL DATAWRT

0024 112C             27     ACALL DELAY

0026 A3               28     INC DPTR

0027 6002             29     JZ AGAIN

0029 80F5             30     SJMP SEND_DAT

002B 22               31     AGAIN: RET

                      32     ;---------------------------------

002C 7B32             33     DELAY: MOV R3,#50

002E 7CFF             34     HERE2: MOV R4,#255

0030 DCFE             35     HERE: DJNZ R4,HERE

0032 DBFA             36     DJNZ R3,HERE2

0034 22               37     RET

                      38     ;--------------------------------- 

0035                  39     READ_KEYPRESS:

0035 7805             40     MOV R0,#5D  ; R0 = 5

0037 79A0             41     MOV R1,#160D ; R1= 160

0039 117B             42     ROTATE:ACALL KEY_SCAN

003B F7               43     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

003C 11FC             44     ACALL DATAWRT ; display the key on LCD

003E 3109             45     ACALL DELAY2 ; delay

0040 09               46     INC R1

0041 D8F6             47     DJNZ R0,ROTATE ;repeat this process for 5 time

0043 22               48     RET

                      49     ;----------------------------------

0044 7805             50     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

0046 79A0             51     MOV R1,#160D ; R1= 160

0048 900511           52     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

004B E4               53     RPT:CLR A ; A = 0

004C 93               54     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

004D 67               55     XRL A,@R1 ; XOR with the actual password

                      56     ;if both the numbers are equal then A = 0;

004E 701B             57     JNZ FAIL ; jump to FAIL where we decide what will happen

A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 13:26:33 PAGE     2

0050 09               58     INC R1

0051 A3               59     INC DPTR

0052 D8F7             60     DJNZ R0,RPT ;repeat this process for 5 times

0054 1111             61     ACALL LCD_INIT

0056 900521           62     MOV DPTR,#TEXT_S1

0059 1120             63     ACALL SEND_DAT ;display corret password

005B 112C             64     ACALL DELAY

005D D2A3             65     SETB P2.3

005F C2A4             66     CLR P2.4

0061 112C             67     ACALL DELAY

0063 112C             68     ACALL DELAY

0065 C2A3             69     CLR P2.3

0067 112C             70     ACALL DELAY

0069 800F             71     SJMP GOBACK

006B 1111             72     FAIL:ACALL LCD_INIT

006D 900517           73     MOV DPTR,#TEXT_F1 

0070 1120             74     ACALL SEND_DAT ;display incorrect text

0072 3109             75     ACALL DELAY2

0074 C2A3             76     CLR P2.3 

0076 C2A4             77     CLR P2.4 ; send 0 to the Driver motor

0078 1100             78     ACALL MAIN ;go to main funtion

007A 22               79     GOBACK:RET

                      80     

                      81     ;--------------------------------------------------

                      82     ;algorithm to check for key scan

007B 7590FF           83     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                      84     ;CHECKING FOR ROW 1 COLUMN 1

007E C290             85     CLR P1.0  ;first row checking #11111110

0080 209403           86     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

0083 7437             87     MOV A,#55D ; if above fails then 7 is pressed , A =7

0085 22               88     RET 

                      89     

0086 209503           90     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

0089 7438             91     MOV A,#56D ; A = 8

008B 22               92     RET

                      93     

008C 209603           94     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

008F 7439             95     MOV A,#57D ; A=9                  

0091 22               96     RET

                      97     

0092 209703           98     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

0095 742F             99     MOV A,#47D  ; A=/ DIVIDE

0097 22              100     RET

                     101     

0098 D290            102     NEXT4:SETB P1.0 ; ROW 1 IS RESET

009A C291            103     CLR P1.1 ;CHEKC FOR ROW 2

009C 209403          104     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

009F 7434            105     MOV A,#52D ; A = 4

00A1 22              106     RET

                     107     

00A2 209503          108     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

00A5 7435            109     MOV A,#53D      ;A = 5

00A7 22              110     RET

                     111     

00A8 209603          112     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

00AB 7436            113     MOV A,#54D ;A = 6

00AD 22              114     RET

                     115     

00AE 209703          116     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

00B1 742A            117     MOV A,#42D ; A = * 

00B3 22              118     RET

                     119     

00B4 D291            120     NEXT8:SETB P1.1 ;ROW IS RESET

00B6 C292            121     CLR P1.2 ; CHECK FOR ROW 3

00B8 209403          122     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

00BB 7431            123     MOV A,#49D  ;A = 1

A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 13:26:33 PAGE     3

00BD 22              124     RET

                     125     

00BE 209503          126     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

00C1 7432            127     MOV A,#50D ;A =2 

00C3 22              128     RET

                     129     

00C4 209603          130     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

00C7 7433            131     MOV A,#51D ;A = 3

00C9 22              132     RET

                     133     

00CA 209703          134     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

00CD 742D            135     MOV A,#45D ;A = -

00CF 22              136     RET

                     137     

00D0 D292            138     NEXT12:SETB P1.2 ; ROW 3 IS RESET

00D2 C293            139     CLR P1.3 ; CHECK FOR ROW 4

00D4 209403          140     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

00D7 7443            141     MOV A,#67D ; A = C

00D9 22              142     RET

                     143     

00DA 209503          144     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

00DD 7430            145     MOV A,#48D ; A = 0

00DF 22              146     RET

                     147     

00E0 209603          148     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

00E3 743D            149     MOV A,#61D       ; A = '='

00E5 22              150     RET

                     151     

00E6 209703          152     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

00E9 742B            153     MOV A,#43D ; A = +

00EB 22              154     RET

00EC 02007B          155     NEXT16:LJMP KEY_SCAN ; again check for keys

                     156     ;!!!!!!!!!!!!!!!!!!!!!!!!!!CHECK FOR SJMP OPTION

                     157     ;-----------------------------------------------

                     158     

00EF F5B0            159     COMNWRT:MOV P3,A

00F1 C2A0            160     CLR P2.0

00F3 C2A1            161     CLR P2.1

00F5 D2A2            162     SETB P2.2

00F7 112C            163     ACALL DELAY

00F9 C2A2            164     CLR P2.2

00FB 22              165     RET

                     166     

00FC F5B0            167     DATAWRT: MOV P3,A

00FE D2A0            168     SETB P2.0

0100 C2A1            169     CLR P2.1

0102 D2A2            170     SETB P2.2

0104 112C            171     ACALL DELAY

0106 C2A2            172     CLR P2.2

0108 22              173     RET

                     174     

                     175     

                     176     

0109 7BFA            177     DELAY2: MOV R3,#250D

010B 758901          178              MOV TMOD,#01

010E 758CFC          179     BACK2:   MOV TH0,#0FCH 

0111 758A18          180             MOV TL0,#018H 

0114 D28C            181             SETB TR0 

0116 308DFD          182     HERE5:  JNB TF0,HERE5

0119 C28C            183             CLR TR0 

011B C28D            184             CLR TF0 

011D DBEF            185             DJNZ R3,BACK2

011F 22              186             RET       

                     187     

0120 7401            188     CLRSCR: MOV A,#01H

0122 11EF            189     ACALL COMNWRT

A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 13:26:33 PAGE     4

0124 22              190     RET

                     191     

0500                 192     ORG 500H

0500 380E0106        193     MYCOM: DB 38H,0EH,01,06,80H,0;

0504 8000                    
                     194     ;initialize, display on curson blinking, clear display screen,

                     195     ;shift cursor to right, move to line 1, 

0506 50415353        196     MYDATA: DB "PASSWORD :",0

050A 574F5244                
050E 203A00                  
0511 31323334        197     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

0515 3500                    
0517 494E434F        198     TEXT_F1: DB "INCORRECT",0

051B 52524543                
051F 5400                    
0521 434F5252        199     TEXT_S1: DB "CORRECT",0

0525 45435400                
                     200     END

A51 MACRO ASSEMBLER  PROJECT                                                              09/30/2021 13:26:33 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   002BH   A   
BACK2. . . . . . .  C ADDR   010EH   A   
C1 . . . . . . . .  C ADDR   0014H   A   
CHECK_PASSWORD . .  C ADDR   0044H   A   
CLRSCR . . . . . .  C ADDR   0120H   A   
COMNWRT. . . . . .  C ADDR   00EFH   A   
DAT. . . . . . . .  C ADDR   001FH   A   
DATAWRT. . . . . .  C ADDR   00FCH   A   
DELAY. . . . . . .  C ADDR   002CH   A   
DELAY2 . . . . . .  C ADDR   0109H   A   
FAIL . . . . . . .  C ADDR   006BH   A   
GOBACK . . . . . .  C ADDR   007AH   A   
HERE . . . . . . .  C ADDR   0030H   A   
HERE2. . . . . . .  C ADDR   002EH   A   
HERE5. . . . . . .  C ADDR   0116H   A   
KEY_SCAN . . . . .  C ADDR   007BH   A   
LCD_INIT . . . . .  C ADDR   0011H   A   
MAIN . . . . . . .  C ADDR   0000H   A   
MYCOM. . . . . . .  C ADDR   0500H   A   
MYDATA . . . . . .  C ADDR   0506H   A   
NEXT1. . . . . . .  C ADDR   0086H   A   
NEXT10 . . . . . .  C ADDR   00C4H   A   
NEXT11 . . . . . .  C ADDR   00CAH   A   
NEXT12 . . . . . .  C ADDR   00D0H   A   
NEXT13 . . . . . .  C ADDR   00DAH   A   
NEXT14 . . . . . .  C ADDR   00E0H   A   
NEXT15 . . . . . .  C ADDR   00E6H   A   
NEXT16 . . . . . .  C ADDR   00ECH   A   
NEXT2. . . . . . .  C ADDR   008CH   A   
NEXT3. . . . . . .  C ADDR   0092H   A   
NEXT4. . . . . . .  C ADDR   0098H   A   
NEXT5. . . . . . .  C ADDR   00A2H   A   
NEXT6. . . . . . .  C ADDR   00A8H   A   
NEXT7. . . . . . .  C ADDR   00AEH   A   
NEXT8. . . . . . .  C ADDR   00B4H   A   
NEXT9. . . . . . .  C ADDR   00BEH   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0511H   A   
READ_KEYPRESS. . .  C ADDR   0035H   A   
ROTATE . . . . . .  C ADDR   0039H   A   
RPT. . . . . . . .  C ADDR   004BH   A   
SEND_DAT . . . . .  C ADDR   0020H   A   
TEXT_F1. . . . . .  C ADDR   0517H   A   
TEXT_S1. . . . . .  C ADDR   0521H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
