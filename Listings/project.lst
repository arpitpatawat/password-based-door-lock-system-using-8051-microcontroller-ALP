A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 12:16:48 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

                       2     ;--------------------------------

0000 7D03              3     MOV R5,#3D ;number of attempts

0002                   4     MAIN:

0002 111E              5     ACALL LCD_INIT ; initialize LCD

0004 900506            6     MOV DPTR,#INITIAL_MSG ;DPTR point to initial text

0007 112D              7     ACALL SEND_DAT ;DISPLAY DPTR content on LCD

0009 3169              8     ACALL DELAY ;GIVE DELAY 

000B 3164              9     ACALL LINE2 ;MOVE TO LINE 2

000D 1139             10     ACALL READ_KEYPRESS ;take input from keypad

000F 3169             11     ACALL DELAY ;give some delay

0011 319F             12     ACALL CLRSCR ; clear our screen

0013 900517           13     MOV DPTR, #CHECK_CODE_MSG

0016 112D             14     ACALL SEND_DAT

0018 3172             15     ACALL DELAY2

001A 114A             16     ACALL CHECK_PASSWORD  ;CHECK for correct password

001C 80E4             17     SJMP MAIN 

                      18     ;---------------------------------

001E 900500           19     LCD_INIT:MOV DPTR,#MYDATA

0021 E4               20     C1:CLR A

0022 93               21     MOVC A,@A+DPTR

0023 6007             22     JZ DAT

0025 314A             23     ACALL COMNWRT

0027 3169             24     ACALL  DELAY

0029 A3               25     INC DPTR

002A 80F5             26     SJMP C1

002C 22               27     DAT:RET

                      28     ;---------------------------------

002D                  29     SEND_DAT:  

002D E4               30     CLR A

002E 93               31     MOVC A,@A+DPTR

002F 6007             32     JZ AGAIN

0031 3157             33     ACALL DATAWRT

0033 3169             34     ACALL DELAY

0035 A3               35     INC DPTR

0036 80F5             36     SJMP SEND_DAT

0038 22               37     AGAIN: RET

                      38     

                      39     ;--------------------------------- 

0039                  40     READ_KEYPRESS:

0039 7805             41     MOV R0,#5D  ; R0 = 5

003B 79A0             42     MOV R1,#160D ; R1= 160

003D 11D6             43     ROTATE:ACALL KEY_SCAN   ;take the input key

003F F7               44     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

0040 3157             45     ACALL DATAWRT ; display the key on LCD

0042 3172             46     ACALL DELAY2 ; delay

0044 3172             47     ACALL DELAY2 ;!!!!!!!!!! TWO DELAYS NEED TO MODIFY !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                             !!!!!!

0046 09               48     INC R1

0047 D8F4             49     DJNZ R0,ROTATE ;repeat this process for 5 time

0049 22               50     RET

                      51     ;----------------------------------

004A 7805             52     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

004C 79A0             53     MOV R1,#160D ; R1= 160

004E 900528           54     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

0051 E4               55     RPT:CLR A ; A = 0

0052 93               56     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 12:16:48 PAGE     2

0053 67               57     XRL A,@R1 ; XOR with the actual password

                      58     ;if both the numbers are equal then A = 0;

0054 7035             59     JNZ FAIL ; jump to FAIL where we decide what will happen

0056 09               60     INC R1

0057 A3               61     INC DPTR

0058 D8F7             62     DJNZ R0,RPT ;repeat this process for 5 times

005A 115D             63     ACALL SUCCESS

005C 22               64     RET

                      65     

                      66     

005D 319F             67     SUCCESS:ACALL CLRSCR

005F 3172             68     ACALL DELAY2

0061 900547           69     MOV DPTR,#TEXT_S1

0064 112D             70     ACALL SEND_DAT ;display corret password

0066 3172             71     ACALL DELAY2

0068 3164             72     ACALL LINE2

006A 900556           73     MOV DPTR,#TEXT_S2

006D 112D             74     ACALL SEND_DAT ;display corret password

006F 3172             75     ACALL DELAY2

0071 D2A3             76     SETB P2.3

0073 C2A4             77     CLR P2.4 ;ROTATE MOTOR CLOCK WISE TO OPEN DOOR

0075 3189             78     ACALL DELAY3 ; GIVE 10 SECOND DELAY

0077 319F             79     ACALL CLRSCR

0079 900563           80     MOV DPTR, #TEXT_S3

007C 112D             81     ACALL SEND_DAT

007E 3172             82     ACALL DELAY2

0080 C2A3             83     CLR P2.3

0082 D2A4             84     SETB P2.4;ROTATE MOTOR ACW TO CLOSE DOOR

0084 3189             85     ACALL DELAY3; GIVE 10 SECOND DELAY

0086 C2A4             86     CLR P2.4

0088 7D03             87     MOV R5,#3H

008A 22               88     RET

                      89     

                      90     

                      91     

                      92     

008B 319F             93     FAIL:ACALL CLRSCR 

008D 90052E           94     MOV DPTR,#TEXT_F1 

0090 112D             95     ACALL SEND_DAT ;display incorrect text

0092 3172             96     ACALL DELAY2

0094 3164             97     ACALL LINE2

0096 900539           98     MOV DPTR, #TEXT_F2

0099 112D             99     ACALL SEND_DAT ;display incorrect text

009B 3172            100     ACALL DELAY2

                     101     ;MOV A,R5

009D DD02            102     DJNZ R5,LOOP

009F 11BC            103     ACALL ALERT

00A1 11A6            104     LOOP: ACALL ATTEMPT

00A3 020002          105     LJMP MAIN ;go to main funtion

                     106     

00A6 319F            107     ATTEMPT: ACALL CLRSCR

00A8 900581          108     MOV DPTR,#ATTEMPT_TEXT

00AB 112D            109     ACALL SEND_DAT

00AD 3172            110     ACALL DELAY2

00AF 7430            111     MOV A,#48D

00B1 2D              112     ADD A,R5

00B2 D4              113     DA A

                     114     ;MOV A ,R5

00B3 3157            115     ACALL DATAWRT

00B5 3169            116     ACALL DELAY

00B7 3172            117     ACALL DELAY2

00B9 3172            118     ACALL DELAY2 ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

00BB 22              119     RET

                     120     

                     121     

00BC 7A0A            122     ALERT:MOV R2,#10D

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 12:16:48 PAGE     3

00BE 319F            123     ACALL CLRSCR

00C0 900570          124     MOV DPTR, #ALERT_TEXT

00C3 112D            125     ACALL SEND_DAT

00C5 3172            126     ACALL DELAY2

00C7 C2A6            127     BUZZ:CLR P2.6

00C9 3172            128     ACALL DELAY2

00CB D2A6            129     SETB P2.6

00CD 3172            130     ACALL DELAY2

00CF DAF6            131     DJNZ R2, BUZZ

00D1 7D03            132     MOV R5,#3D

00D3 020002          133     LJMP MAIN

                     134     ;--------------------------------------------------

                     135     ;algorithm to check for key scan

00D6 7590FF          136     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                     137     ;CHECKING FOR ROW 1 COLUMN 1

00D9 C290            138     CLR P1.0  ;first row checking #11111110

00DB 209403          139     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

00DE 7437            140     MOV A,#55D ; if above fails then 7 is pressed , A =7

00E0 22              141     RET 

                     142     

00E1 209503          143     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

00E4 7438            144     MOV A,#56D ; A = 8

00E6 22              145     RET

                     146     

00E7 209603          147     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

00EA 7439            148     MOV A,#57D ; A=9                  

00EC 22              149     RET

                     150     

00ED 209703          151     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

00F0 742F            152     MOV A,#47D  ; A=/ DIVIDE

00F2 22              153     RET

                     154     

00F3 D290            155     NEXT4:SETB P1.0 ; ROW 1 IS RESET

00F5 C291            156     CLR P1.1 ;CHECK FOR ROW 2

00F7 209403          157     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

00FA 7434            158     MOV A,#52D ; A = 4

00FC 22              159     RET

                     160     

00FD 209503          161     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

0100 7435            162     MOV A,#53D      ;A = 5

0102 22              163     RET

                     164     

0103 209603          165     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

0106 7436            166     MOV A,#54D ;A = 6

0108 22              167     RET

                     168     

0109 209703          169     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

010C 742A            170     MOV A,#42D ; A = * 

010E 22              171     RET

                     172     

010F D291            173     NEXT8:SETB P1.1 ;ROW IS RESET

0111 C292            174     CLR P1.2 ; CHECK FOR ROW 3

0113 209403          175     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

0116 7431            176     MOV A,#49D  ;A = 1

0118 22              177     RET

                     178     

0119 209503          179     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

011C 7432            180     MOV A,#50D ;A =2 

011E 22              181     RET

                     182     

011F 209603          183     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

0122 7433            184     MOV A,#51D ;A = 3

0124 22              185     RET

                     186     

0125 209703          187     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

0128 742D            188     MOV A,#45D ;A = -

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 12:16:48 PAGE     4

012A 22              189     RET

                     190     

012B D292            191     NEXT12:SETB P1.2 ; ROW 3 IS RESET

012D C293            192     CLR P1.3 ; CHECK FOR ROW 4

012F 209403          193     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

0132 7443            194     MOV A,#67D ; A = C

0134 22              195     RET

                     196     

0135 209503          197     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

0138 7430            198     MOV A,#48D ; A = 0

013A 22              199     RET

                     200     

013B 209603          201     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

013E 743D            202     MOV A,#61D       ; A = '='

0140 22              203     RET

                     204     

0141 209703          205     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

0144 742B            206     MOV A,#43D ; A = +

0146 22              207     RET

0147 0200D6          208     NEXT16:LJMP KEY_SCAN ; again check for keys

                     209     ;!!!!!!!!!!!!!!!!!!!!!!!!!!CHECK FOR SJMP OPTION

                     210     ;-----------------------------------------------

                     211     

014A F5B0            212     COMNWRT:MOV P3,A

014C C2A0            213     CLR P2.0 ; R/s = 0

014E C2A1            214     CLR P2.1 ;R/w =0

0150 D2A2            215     SETB P2.2 ;high

0152 3169            216     ACALL DELAY ; delay

0154 C2A2            217     CLR P2.2 ;low

0156 22              218     RET

                     219     

0157 F5B0            220     DATAWRT: MOV P3,A

0159 D2A0            221     SETB P2.0

015B C2A1            222     CLR P2.1

015D D2A2            223     SETB P2.2

015F 3169            224     ACALL DELAY

0161 C2A2            225     CLR P2.2

0163 22              226     RET

                     227     

0164 74C0            228     LINE2: MOV A,#0C0H

0166 314A            229     ACALL COMNWRT

0168 22              230     RET

                     231     

                     232     ;---------------------------------

0169 7B41            233     DELAY: MOV R3,#65

016B 7CFF            234     HERE2: MOV R4,#255

016D DCFE            235     HERE: DJNZ R4,HERE

016F DBFA            236     DJNZ R3,HERE2

0171 22              237     RET

                     238     

0172 7BFA            239     DELAY2: MOV R3,#250D

0174 758901          240              MOV TMOD,#01

0177 758CFC          241     BACK2:   MOV TH0,#0FCH 

017A 758A18          242             MOV TL0,#018H 

017D D28C            243             SETB TR0 

017F 308DFD          244     HERE5:  JNB TF0,HERE5

0182 C28C            245             CLR TR0 

0184 C28D            246             CLR TF0 

0186 DBEF            247             DJNZ R3,BACK2

0188 22              248             RET   

                     249     

0189 758910          250     DELAY3:MOV TMOD,#10H ;Timer 1, mod 1

018C 7B78            251     MOV R3,#120 ;cnter for multiple delay

018E 758B08          252     AGAIN1: MOV TL1,#08H ;TL1=08,low byte of timer

0191 758D01          253     MOV TH1,#01H ;TH1=01,high byte

0194 D28E            254     SETB TR1 ;Start timer 1

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 12:16:48 PAGE     5

0196 308FFD          255     BACK: JNB TF1,BACK ;until timer rolls over

0199 C28E            256     CLR TR1 ;Stop the timer 1

019B C28F            257     CLR TF1 ;clear Timer 1 flag

019D DBEF            258     DJNZ R3,AGAIN1 ;if R3 not zero then 

                     259     ;reload time

                     260     

                     261     

019F 7401            262     CLRSCR: MOV A,#01H

01A1 314A            263     ACALL COMNWRT

01A3 22              264     RET

                     265     

0500                 266     ORG 500H

0500 380E0106        267     MYDATA: DB 38H,0EH,01,06,80H,0; 

0504 8000                    
                     268     ;initializer 5 X 7 MATRIX lcd

                     269     ;display on cursor blinking

                     270     ;clear the display screen

                     271     ;cursor shift --> towards right

                     272     ;start from the first line

0506 454E5445        273     INITIAL_MSG:   DB "ENTER 5-DIG.CODE",0

050A 5220352D                
050E 4449472E                
0512 434F4445                
0516 00                      
0517 43484543        274     CHECK_CODE_MSG:  DB "CHECKING CODE...",0        

051B 4B494E47                
051F 20434F44                
0523 452E2E2E                
0527 00                      
0528 31323334        275     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

052C 3500                    
052E 57524F4E        276     TEXT_F1: DB "WRONG CODE",0

0532 4720434F                
0536 444500                  
0539 41434345        277     TEXT_F2: DB "ACCESS DENIED",0

053D 53532044                
0541 454E4945                
0545 4400                    
0547 41434345        278     TEXT_S1: DB "ACCESS GRANTED",0

054B 53532047                
054F 52414E54                
0553 454400                  
0556 4F50454E        279     TEXT_S2: DB "OPENING DOOR",0

055A 494E4720                
055E 444F4F52                
0562 00                      
0563 434C4F53        280     TEXT_S3: DB "CLOSING DOOR", 0

0567 494E4720                
056B 444F4F52                
056F 00                      
0570 494E5452        281     ALERT_TEXT: DB "INTRUDER ALERT !",0

0574 55444552                
0578 20414C45                
057C 52542021                
0580 00                      
0581 41545445        282     ATTEMPT_TEXT: DB "ATTEMPTS LEFT:0",0

0585 4D505453                
0589 204C4546                
058D 543A3000                
0591 353637          283     ATTEMPT_VALUE: DB 53D,54D,55D

                     284     END

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 12:16:48 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   0038H   A   
AGAIN1 . . . . . .  C ADDR   018EH   A   
ALERT. . . . . . .  C ADDR   00BCH   A   
ALERT_TEXT . . . .  C ADDR   0570H   A   
ATTEMPT. . . . . .  C ADDR   00A6H   A   
ATTEMPT_TEXT . . .  C ADDR   0581H   A   
ATTEMPT_VALUE. . .  C ADDR   0591H   A   
BACK . . . . . . .  C ADDR   0196H   A   
BACK2. . . . . . .  C ADDR   0177H   A   
BUZZ . . . . . . .  C ADDR   00C7H   A   
C1 . . . . . . . .  C ADDR   0021H   A   
CHECK_CODE_MSG . .  C ADDR   0517H   A   
CHECK_PASSWORD . .  C ADDR   004AH   A   
CLRSCR . . . . . .  C ADDR   019FH   A   
COMNWRT. . . . . .  C ADDR   014AH   A   
DAT. . . . . . . .  C ADDR   002CH   A   
DATAWRT. . . . . .  C ADDR   0157H   A   
DELAY. . . . . . .  C ADDR   0169H   A   
DELAY2 . . . . . .  C ADDR   0172H   A   
DELAY3 . . . . . .  C ADDR   0189H   A   
FAIL . . . . . . .  C ADDR   008BH   A   
HERE . . . . . . .  C ADDR   016DH   A   
HERE2. . . . . . .  C ADDR   016BH   A   
HERE5. . . . . . .  C ADDR   017FH   A   
INITIAL_MSG. . . .  C ADDR   0506H   A   
KEY_SCAN . . . . .  C ADDR   00D6H   A   
LCD_INIT . . . . .  C ADDR   001EH   A   
LINE2. . . . . . .  C ADDR   0164H   A   
LOOP . . . . . . .  C ADDR   00A1H   A   
MAIN . . . . . . .  C ADDR   0002H   A   
MYDATA . . . . . .  C ADDR   0500H   A   
NEXT1. . . . . . .  C ADDR   00E1H   A   
NEXT10 . . . . . .  C ADDR   011FH   A   
NEXT11 . . . . . .  C ADDR   0125H   A   
NEXT12 . . . . . .  C ADDR   012BH   A   
NEXT13 . . . . . .  C ADDR   0135H   A   
NEXT14 . . . . . .  C ADDR   013BH   A   
NEXT15 . . . . . .  C ADDR   0141H   A   
NEXT16 . . . . . .  C ADDR   0147H   A   
NEXT2. . . . . . .  C ADDR   00E7H   A   
NEXT3. . . . . . .  C ADDR   00EDH   A   
NEXT4. . . . . . .  C ADDR   00F3H   A   
NEXT5. . . . . . .  C ADDR   00FDH   A   
NEXT6. . . . . . .  C ADDR   0103H   A   
NEXT7. . . . . . .  C ADDR   0109H   A   
NEXT8. . . . . . .  C ADDR   010FH   A   
NEXT9. . . . . . .  C ADDR   0119H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0528H   A   
READ_KEYPRESS. . .  C ADDR   0039H   A   
ROTATE . . . . . .  C ADDR   003DH   A   
RPT. . . . . . . .  C ADDR   0051H   A   
SEND_DAT . . . . .  C ADDR   002DH   A   
SUCCESS. . . . . .  C ADDR   005DH   A   
TEXT_F1. . . . . .  C ADDR   052EH   A   
TEXT_F2. . . . . .  C ADDR   0539H   A   
TEXT_S1. . . . . .  C ADDR   0547H   A   
TEXT_S2. . . . . .  C ADDR   0556H   A   
A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 12:16:48 PAGE     7

TEXT_S3. . . . . .  C ADDR   0563H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
