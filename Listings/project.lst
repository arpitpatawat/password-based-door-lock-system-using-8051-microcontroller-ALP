A51 MACRO ASSEMBLER  PROJECT                                                              11/19/2021 22:23:47 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

0000 7E00              2     MOV R6,#0D      

0002 7D03              3     MOV R5,#3D ;number of attempts

0004 7400              4     MOV A,#0

0006 A2E4              5     MOV C,ACC.4

0008 9284              6     MOV P0.4,C

000A A2E5              7     MOV C,ACC.5

000C 9285              8     MOV P0.5,C

000E A2E6              9     MOV C,ACC.6

0010 9286             10     MOV P0.6,C

0012 A2E7             11     MOV C,ACC.7

0014 9287             12     MOV P0.7,C

                      13     

                      14     ;--------------------------------

0016                  15     MAIN:

0016 C280             16     CLR P0.0

0018 C2A7             17     CLR P2.7 ; port 2.7 will be used for buzzer

                      18     ;CLR P0.0 ;the communication pin with arduino

001A C283             19     CLR P0.3 ; led lockdown

001C 1138             20     ACALL LCD_INIT ; initialize LCD

001E 90050F           21     MOV DPTR,#INITIAL_MSG ;DPTR point to initial text

0021 1147             22     ACALL SEND_DAT ;DISPLAY DPTR content on LCD

0023 31C8             23     ACALL DELAY ;GIVE DELAY 

0025 31C3             24     ACALL LINE2 ;MOVE TO LINE 2

0027 1153             25     ACALL READ_KEYPRESS ;take input from keypad

0029 31C8             26     ACALL DELAY ;give some delay

002B 31FF             27     ACALL CLRSCR ; clear our screen

002D 900520           28     MOV DPTR, #CHECK_CODE_MSG ;send checking code.. msg to lcd

0030 1147             29     ACALL SEND_DAT

0032 31D1             30     ACALL DELAY2

0034 1164             31     ACALL CHECK_PASSWORD  ;CHECK for correct password

0036 80DE             32     SJMP MAIN ;short jump to main

                      33     ;---------------------------------

0038 900509           34     LCD_INIT:MOV DPTR,#MYDATA

003B E4               35     C1:CLR A

003C 93               36     MOVC A,@A+DPTR

003D 6007             37     JZ DAT ; jump if A  = 0

003F 31A9             38     ACALL COMNWRT

0041 31C8             39     ACALL  DELAY

0043 A3               40     INC DPTR

0044 80F5             41     SJMP C1

0046 22               42     DAT:RET

                      43     ;---------------------------------

0047                  44     SEND_DAT:  

0047 E4               45     CLR A

0048 93               46     MOVC A,@A+DPTR

0049 6007             47     JZ AGAIN ; jump if A = 0

004B 31B6             48     ACALL DATAWRT

004D 31C8             49     ACALL DELAY

004F A3               50     INC DPTR

0050 80F5             51     SJMP SEND_DAT

0052 22               52     AGAIN: RET

                      53     ;--------------------------------- 

0053                  54     READ_KEYPRESS:

0053 7805             55     MOV R0,#5D  ; R0 = 5

0055 79A0             56     MOV R1,#160D ; R1= 160

0057 3135             57     ROTATE:ACALL KEY_SCAN   ;take the input key

A51 MACRO ASSEMBLER  PROJECT                                                              11/19/2021 22:23:47 PAGE     2

0059 F7               58     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

005A 31B6             59     ACALL DATAWRT ; display the key on LCD

005C 31D1             60     ACALL DELAY2 ; delay

005E 31D1             61     ACALL DELAY2 ;

0060 09               62     INC R1

0061 D8F4             63     DJNZ R0,ROTATE ;repeat this process for 5 time

0063 22               64     RET

                      65     ;----------------------------------

0064 7805             66     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

0066 79A0             67     MOV R1,#160D ; R1= 160

0068 900531           68     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

006B E4               69     RPT:CLR A ; A = 0

006C 93               70     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

006D 67               71     XRL A,@R1 ; XOR with the actual password

                      72     ;if both the numbers are equal then A = 0;

006E 7055             73     JNZ FAIL ; jump if a not = 0

0070 09               74     INC R1

0071 A3               75     INC DPTR

0072 D8F7             76     DJNZ R0,RPT ;repeat this process for 5 times

0074 1177             77     ACALL SUCCESS

0076 22               78     RET

                      79     ;-----------------------------------

0077 31FF             80     SUCCESS:ACALL CLRSCR

0079 31D1             81     ACALL DELAY2

007B 900550           82     MOV DPTR,#TEXT_S1

007E 1147             83     ACALL SEND_DAT ;display correct password

0080 31D1             84     ACALL DELAY2

0082 31C3             85     ACALL LINE2

0084 90055F           86     MOV DPTR,#TEXT_S2

0087 1147             87     ACALL SEND_DAT ;display opening door

0089 31D1             88     ACALL DELAY2

008B 900500           89     MOV DPTR,#500H

008E EE               90     MOV A,R6

008F 93               91     MOVC A,@A+DPTR

0090 A2E4             92     MOV C,ACC.4

0092 9284             93     MOV P0.4,C

0094 A2E5             94     MOV C,ACC.5

0096 9285             95     MOV P0.5,C

0098 A2E6             96     MOV C,ACC.6

009A 9286             97     MOV P0.6,C

009C A2E7             98     MOV C,ACC.7

009E 9287             99     MOV P0.7,C

00A0 0E              100     INC R6

00A1 31C8            101     ACALL DELAY

00A3 C2A3            102     CLR P2.3

00A5 C2A4            103     CLR P2.4 

                     104     ;ROTATE MOTOR CLOCK WISE 90 degree TO OPEN DOOR

00A7 31E8            105     ACALL DELAY3 ; GIVE SECOND DELAY

00A9 31FF            106     ACALL CLRSCR

00AB 90056C          107     MOV DPTR, #TEXT_S3

00AE 1147            108     ACALL SEND_DAT

00B0 31D1            109     ACALL DELAY2

00B2 31E8            110     ACALL DELAY3; GIVE SECOND DELAY

00B4 D2A3            111     SETB P2.3 ;rotate motor antin clock wise

00B6 C2A5            112     CLR P2.5

00B8 31D1            113     ACALL DELAY2

00BA D2A3            114     SETB P2.3 ;initial position 

00BC D2A4            115     SETB P2.4

00BE D2A5            116     SETB P2.5

00C0 D2A6            117     SETB P2.6

00C2 7D03            118     MOV R5,#3D ;reset attempts value

00C4 22              119     RET

                     120     ;----------------------------

00C5 31FF            121     FAIL:ACALL CLRSCR 

00C7 900537          122     MOV DPTR,#TEXT_F1 

00CA 1147            123     ACALL SEND_DAT ;display incorrect text

A51 MACRO ASSEMBLER  PROJECT                                                              11/19/2021 22:23:47 PAGE     3

00CC 31D1            124     ACALL DELAY2

00CE 31C3            125     ACALL LINE2

00D0 900542          126     MOV DPTR, #TEXT_F2

00D3 1147            127     ACALL SEND_DAT ;display access denied text

00D5 31D1            128     ACALL DELAY2

00D7 DD02            129     DJNZ R5,LOOP

00D9 11F6            130     ACALL ALERT

00DB 11E0            131     LOOP: ACALL ATTEMPT

00DD 020016          132     LJMP MAIN ;go to main funtion

                     133     ;------------------------------

00E0 31FF            134     ATTEMPT: ACALL CLRSCR

00E2 90058A          135     MOV DPTR,#ATTEMPT_TEXT ;number of attempts left

00E5 1147            136     ACALL SEND_DAT

00E7 31D1            137     ACALL DELAY2

00E9 7430            138     MOV A,#48D ; 48 = 0

00EB 2D              139     ADD A,R5

00EC D4              140     DA A

00ED 31B6            141     ACALL DATAWRT

00EF 31C8            142     ACALL DELAY

00F1 31D1            143     ACALL DELAY2

00F3 31D1            144     ACALL DELAY2 ;

00F5 22              145     RET

                     146     ;-------------------------------

00F6 D280            147     ALERT:SETB P0.0 ;sending alert to arduino

00F8 7A0A            148     MOV R2,#10D

00FA 31FF            149     ACALL CLRSCR

00FC 900579          150     MOV DPTR, #ALERT_TEXT ;display alert text

00FF 1147            151     ACALL SEND_DAT

0101 31D1            152     ACALL DELAY2

0103 D2A7            153     BUZZ:SETB P2.7 ;buzzer will turn on and off 10 times

0105 31D1            154     ACALL DELAY2

0107 C2A7            155     CLR P2.7

0109 31D1            156     ACALL DELAY2

010B DAF6            157     DJNZ R2, BUZZ

010D 7D03            158     MOV R5,#3D

010F 8003            159     SJMP NOTIFICATION

0111 020016          160     LJMP MAIN

                     161     ;~~~~~~~~~~~~~~~~~~~~~~~~~~

0114 208105          162     NOTIFICATION:JB P0.1,LOCKDOWN

0117 208218          163     JB P0.2,RESET

011A 80F8            164     SJMP NOTIFICATION

011C D283            165     LOCKDOWN:SETB P0.3

011E 31FF            166     ACALL CLRSCR

0120 90059A          167     MOV DPTR,#LOCKDOWN_TEXT ;

0123 1147            168     ACALL SEND_DAT

0125 31D1            169     ACALL DELAY2

0127 31C3            170     ACALL LINE2

0129 9005AB          171     MOV DPTR,#POLICE_TEXT ;

012C 1147            172     ACALL SEND_DAT

012E 31D1            173     ACALL DELAY2

0130 80E2            174     SJMP NOTIFICATION

                     175     

0132 020016          176     RESET: LJMP MAIN

                     177     

                     178     ;--------------------------------------------------

                     179     ;algorithm to check for key scan

0135 7590FF          180     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                     181     ;CHECKING FOR ROW 1 COLUMN 1

0138 C290            182     CLR P1.0  ;first row checking #11111110

013A 209403          183     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

013D 7437            184     MOV A,#55D ; if above fails then 7 is pressed , A =7

013F 22              185     RET 

                     186     

0140 209503          187     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

0143 7438            188     MOV A,#56D ; A = 8

0145 22              189     RET

A51 MACRO ASSEMBLER  PROJECT                                                              11/19/2021 22:23:47 PAGE     4

                     190     

0146 209603          191     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

0149 7439            192     MOV A,#57D ; A=9                  

014B 22              193     RET

                     194     

014C 209703          195     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

014F 742F            196     MOV A,#47D  ; A=/ DIVIDE

0151 22              197     RET

                     198     

0152 D290            199     NEXT4:SETB P1.0 ; ROW 1 IS RESET

0154 C291            200     CLR P1.1 ;CHECK FOR ROW 2

0156 209403          201     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

0159 7434            202     MOV A,#52D ; A = 4

015B 22              203     RET

                     204     

015C 209503          205     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

015F 7435            206     MOV A,#53D      ;A = 5

0161 22              207     RET

                     208     

0162 209603          209     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

0165 7436            210     MOV A,#54D ;A = 6

0167 22              211     RET

                     212     

0168 209703          213     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

016B 742A            214     MOV A,#42D ; A = * 

016D 22              215     RET

                     216     

016E D291            217     NEXT8:SETB P1.1 ;ROW IS RESET

0170 C292            218     CLR P1.2 ; CHECK FOR ROW 3

0172 209403          219     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

0175 7431            220     MOV A,#49D  ;A = 1

0177 22              221     RET

                     222     

0178 209503          223     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

017B 7432            224     MOV A,#50D ;A =2 

017D 22              225     RET

                     226     

017E 209603          227     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

0181 7433            228     MOV A,#51D ;A = 3

0183 22              229     RET

                     230     

0184 209703          231     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

0187 742D            232     MOV A,#45D ;A = -

0189 22              233     RET

                     234     

018A D292            235     NEXT12:SETB P1.2 ; ROW 3 IS RESET

018C C293            236     CLR P1.3 ; CHECK FOR ROW 4

018E 209403          237     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

0191 7443            238     MOV A,#67D ; A = C

0193 22              239     RET

                     240     

0194 209503          241     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

0197 7430            242     MOV A,#48D ; A = 0

0199 22              243     RET

                     244     

019A 209603          245     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

019D 743D            246     MOV A,#61D       ; A = '='

019F 22              247     RET

                     248     

01A0 209703          249     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

01A3 742B            250     MOV A,#43D ; A = +

01A5 22              251     RET

01A6 020135          252     NEXT16:LJMP KEY_SCAN ; again check for keys

                     253     ;-----------------------------------------------

                     254     

01A9 F5B0            255     COMNWRT:MOV P3,A  ;to send command

A51 MACRO ASSEMBLER  PROJECT                                                              11/19/2021 22:23:47 PAGE     5

01AB C2A0            256     CLR P2.0 ; R/s = 0

01AD C2A1            257     CLR P2.1 ;R/w =0

01AF D2A2            258     SETB P2.2 ;high

01B1 31C8            259     ACALL DELAY ; delay

01B3 C2A2            260     CLR P2.2 ;low

01B5 22              261     RET

                     262     

01B6 F5B0            263     DATAWRT: MOV P3,A  ;to send data

01B8 D2A0            264     SETB P2.0

01BA C2A1            265     CLR P2.1

01BC D2A2            266     SETB P2.2

01BE 31C8            267     ACALL DELAY

01C0 C2A2            268     CLR P2.2

01C2 22              269     RET

                     270     ;-------------------------------------------------

01C3 74C0            271     LINE2: MOV A,#0C0H ;move to line 2 of LCD

01C5 31A9            272     ACALL COMNWRT

01C7 22              273     RET

                     274     

                     275     ;---------------------------------

01C8 7B41            276     DELAY: MOV R3,#65 ; r3 = 65 , m = 1

01CA 7CFF            277     HERE2: MOV R4,#255 ;r4 = 255 , m =1

01CC DCFE            278     HERE: DJNZ R4,HERE ; m = 2

01CE DBFA            279     DJNZ R3,HERE2 ;m =2

01D0 22              280     RET ;m =2

                     281     ;for here loop , 2 * 255 * 1.085 uS = 553.35 us

                     282     ;HERE 2 loop repeats HERE loop 65 times then  553.35 us * 65 = 35967.75uS

                     283     ;mov r4 is also repating 65 times  and djnz r3 too so 3 * 65 * 1.085 us = 211uS

                     284     ;for return 2 * 1.085 = 2.17uS

                     285     ;total machine cycle = 35967.75 + 211 + 2.17 = 36180.92 uS

                     286     ;time delay = 0.036 S

                     287      

                     288     ;------------------------------------------

01D1 7BFA            289     DELAY2: MOV R3,#250D ; R3  = 250

01D3 758901          290             MOV TMOD,#01 ; timer 0 mode 1

01D6 758CFC          291     BACK2:  MOV TH0,#0FCH 

01D9 758A18          292             MOV TL0,#018H  ;initial count value = FC18 is loaded into timer

01DC D28C            293             SETB TR0 ;starting timer

01DE 308DFD          294     HERE5:  JNB TF0,HERE5 ;monitor Timer flag if it is 1

01E1 C28C            295             CLR TR0 ; stop the timer

01E3 C28D            296             CLR TF0 ; reset the timer flag

01E5 DBEF            297             DJNZ R3,BACK2 ; repeat this process 250 times

01E7 22              298             RET  

                     299     ;COUNT = 65535 - 64536 + 1 = 1000

                     300     ; 1000 * 1.085 uS = 1085 uS

                     301     ; 1085uS * 250 = 0.271 S

                     302     ;--------------------------------------------

                     303     

01E8 758910          304     DELAY3:MOV TMOD,#10H ;Timer 1, mod 1

01EB 7B46            305     MOV R3,#70 ; for multiple delay

01ED 758B00          306     AGAIN1: MOV TL1,#00H ;TL1=08,low byte of timer

01F0 758D00          307     MOV TH1,#00H ;TH1=01,high byte , TIMER = 0000

01F3 D28E            308     SETB TR1 ;Start timer 1

01F5 308FFD          309     BACK: JNB TF1,BACK ;until timer rolls over

01F8 C28E            310     CLR TR1 ;Stop the timer 1

01FA C28F            311     CLR TF1 ;clear Timer 1 flag

01FC DBEF            312     DJNZ R3,AGAIN1 ;if R3 not zero then

01FE 22              313     RET

                     314     ;COUNT = 65535 - 0000 + 1 = 65536

                     315     ;65536 * 1.085 uS = 71.1065mS

                     316     ;71.1065 mS * 70 = 4977.45mS = 5S

                     317     

                     318     ;-----------------------------------------

01FF 7401            319     CLRSCR: MOV A,#01H

0201 31A9            320     ACALL COMNWRT

0203 22              321     RET

A51 MACRO ASSEMBLER  PROJECT                                                              11/19/2021 22:23:47 PAGE     6

                     322     ;----------------------------------------

0500                 323     ORG 500H

0500 8040C020        324     DB 10000000B,01000000B,11000000B,00100000B,10100000B,01100000B,11100000B,00010000B,00110000
                             B

0504 A060E010                
0508 30                      
0509 380E0106        325     MYDATA: DB 38H,0EH,01,06,80H,0; 

050D 8000                    
                     326     ;initializer 5 X 7 MATRIX lcd

                     327     ;display on cursor blinking

                     328     ;clear the display screen

                     329     ;cursor shift --> towards right

                     330     ;start from the first line

050F 454E5445        331     INITIAL_MSG:   DB "ENTER 5-DIG.CODE",0

0513 5220352D                
0517 4449472E                
051B 434F4445                
051F 00                      
0520 43484543        332     CHECK_CODE_MSG:  DB "CHECKING CODE...",0        

0524 4B494E47                
0528 20434F44                
052C 452E2E2E                
0530 00                      
0531 31323334        333     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

0535 3500                    
0537 57524F4E        334     TEXT_F1: DB "WRONG CODE",0

053B 4720434F                
053F 444500                  
0542 41434345        335     TEXT_F2: DB "ACCESS DENIED",0

0546 53532044                
054A 454E4945                
054E 4400                    
0550 41434345        336     TEXT_S1: DB "ACCESS GRANTED",0

0554 53532047                
0558 52414E54                
055C 454400                  
055F 4F50454E        337     TEXT_S2: DB "OPENING DOOR",0

0563 494E4720                
0567 444F4F52                
056B 00                      
056C 434C4F53        338     TEXT_S3: DB "CLOSING DOOR", 0

0570 494E4720                
0574 444F4F52                
0578 00                      
0579 494E5452        339     ALERT_TEXT: DB "INTRUDER ALERT !",0

057D 55444552                
0581 20414C45                
0585 52542021                
0589 00                      
058A 41545445        340     ATTEMPT_TEXT: DB "ATTEMPTS LEFT:0",0

058E 4D505453                
0592 204C4546                
0596 543A3000                
059A 4C4F434B        341     LOCKDOWN_TEXT: DB "LOCKDOWN STARTED",0

059E 444F574E                
05A2 20535441                
05A6 52544544                
05AA 00                      
05AB 43414C4C        342     POLICE_TEXT: DB "CALLING POLICE!",0

05AF 494E4720                
05B3 504F4C49                
05B7 43452100                
                     343     END

A51 MACRO ASSEMBLER  PROJECT                                                              11/19/2021 22:23:47 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . .  D ADDR   00E0H   A   
AGAIN. . . . . . .  C ADDR   0052H   A   
AGAIN1 . . . . . .  C ADDR   01EDH   A   
ALERT. . . . . . .  C ADDR   00F6H   A   
ALERT_TEXT . . . .  C ADDR   0579H   A   
ATTEMPT. . . . . .  C ADDR   00E0H   A   
ATTEMPT_TEXT . . .  C ADDR   058AH   A   
BACK . . . . . . .  C ADDR   01F5H   A   
BACK2. . . . . . .  C ADDR   01D6H   A   
BUZZ . . . . . . .  C ADDR   0103H   A   
C1 . . . . . . . .  C ADDR   003BH   A   
CHECK_CODE_MSG . .  C ADDR   0520H   A   
CHECK_PASSWORD . .  C ADDR   0064H   A   
CLRSCR . . . . . .  C ADDR   01FFH   A   
COMNWRT. . . . . .  C ADDR   01A9H   A   
DAT. . . . . . . .  C ADDR   0046H   A   
DATAWRT. . . . . .  C ADDR   01B6H   A   
DELAY. . . . . . .  C ADDR   01C8H   A   
DELAY2 . . . . . .  C ADDR   01D1H   A   
DELAY3 . . . . . .  C ADDR   01E8H   A   
FAIL . . . . . . .  C ADDR   00C5H   A   
HERE . . . . . . .  C ADDR   01CCH   A   
HERE2. . . . . . .  C ADDR   01CAH   A   
HERE5. . . . . . .  C ADDR   01DEH   A   
INITIAL_MSG. . . .  C ADDR   050FH   A   
KEY_SCAN . . . . .  C ADDR   0135H   A   
LCD_INIT . . . . .  C ADDR   0038H   A   
LINE2. . . . . . .  C ADDR   01C3H   A   
LOCKDOWN . . . . .  C ADDR   011CH   A   
LOCKDOWN_TEXT. . .  C ADDR   059AH   A   
LOOP . . . . . . .  C ADDR   00DBH   A   
MAIN . . . . . . .  C ADDR   0016H   A   
MYDATA . . . . . .  C ADDR   0509H   A   
NEXT1. . . . . . .  C ADDR   0140H   A   
NEXT10 . . . . . .  C ADDR   017EH   A   
NEXT11 . . . . . .  C ADDR   0184H   A   
NEXT12 . . . . . .  C ADDR   018AH   A   
NEXT13 . . . . . .  C ADDR   0194H   A   
NEXT14 . . . . . .  C ADDR   019AH   A   
NEXT15 . . . . . .  C ADDR   01A0H   A   
NEXT16 . . . . . .  C ADDR   01A6H   A   
NEXT2. . . . . . .  C ADDR   0146H   A   
NEXT3. . . . . . .  C ADDR   014CH   A   
NEXT4. . . . . . .  C ADDR   0152H   A   
NEXT5. . . . . . .  C ADDR   015CH   A   
NEXT6. . . . . . .  C ADDR   0162H   A   
NEXT7. . . . . . .  C ADDR   0168H   A   
NEXT8. . . . . . .  C ADDR   016EH   A   
NEXT9. . . . . . .  C ADDR   0178H   A   
NOTIFICATION . . .  C ADDR   0114H   A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0531H   A   
POLICE_TEXT. . . .  C ADDR   05ABH   A   
READ_KEYPRESS. . .  C ADDR   0053H   A   
RESET. . . . . . .  C ADDR   0132H   A   
ROTATE . . . . . .  C ADDR   0057H   A   
RPT. . . . . . . .  C ADDR   006BH   A   
A51 MACRO ASSEMBLER  PROJECT                                                              11/19/2021 22:23:47 PAGE     8

SEND_DAT . . . . .  C ADDR   0047H   A   
SUCCESS. . . . . .  C ADDR   0077H   A   
TEXT_F1. . . . . .  C ADDR   0537H   A   
TEXT_F2. . . . . .  C ADDR   0542H   A   
TEXT_S1. . . . . .  C ADDR   0550H   A   
TEXT_S2. . . . . .  C ADDR   055FH   A   
TEXT_S3. . . . . .  C ADDR   056CH   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
