A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 01:01:47 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

                       2     ;--------------------------------

0000 7D03              3     MOV R5,#3D

0002                   4     MAIN:

0002 111E              5     ACALL LCD_INIT ; initialize LCD

0004 900506            6     MOV DPTR,#INITIAL_MSG ;DPTR point to initial text

0007 112D              7     ACALL SEND_DAT ;DISPLAY DPTR content on LCD

0009 3150              8     ACALL DELAY ;GIVE DELAY 

000B 314B              9     ACALL LINE2 ;MOVE TO LINE 2

000D 1139             10     ACALL READ_KEYPRESS ;take input from keypad

000F 3150             11     ACALL DELAY ;give some delay

0011 3186             12     ACALL CLRSCR ; clear our screen

0013 900517           13     MOV DPTR, #CHECK_CODE_MSG

0016 112D             14     ACALL SEND_DAT

0018 3159             15     ACALL DELAY2

001A 114A             16     ACALL CHECK_PASSWORD  ;CHECK for correct password

001C 80E4             17     SJMP MAIN 

                      18     ;---------------------------------

001E 900500           19     LCD_INIT:MOV DPTR,#MYDATA

0021 E4               20     C1:CLR A

0022 93               21     MOVC A,@A+DPTR

0023 6007             22     JZ DAT

0025 3131             23     ACALL COMNWRT

0027 3150             24     ACALL  DELAY

0029 A3               25     INC DPTR

002A 80F5             26     SJMP C1

002C 22               27     DAT:RET

                      28     ;---------------------------------

002D                  29     SEND_DAT:  

002D E4               30     CLR A

002E 93               31     MOVC A,@A+DPTR

002F 6007             32     JZ AGAIN

0031 313E             33     ACALL DATAWRT

0033 3150             34     ACALL DELAY

0035 A3               35     INC DPTR

0036 80F5             36     SJMP SEND_DAT

0038 22               37     AGAIN: RET

                      38     

                      39     ;--------------------------------- 

0039                  40     READ_KEYPRESS:

0039 7805             41     MOV R0,#5D  ; R0 = 5

003B 79A0             42     MOV R1,#160D ; R1= 160

003D 11BD             43     ROTATE:ACALL KEY_SCAN   ;take the input key

003F F7               44     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

0040 313E             45     ACALL DATAWRT ; display the key on LCD

0042 3159             46     ACALL DELAY2 ; delay

0044 3159             47     ACALL DELAY2 ;!!!!!!!!!! TWO DELAYS NEED TO MODIFY !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                             !!!!!!

0046 09               48     INC R1

0047 D8F4             49     DJNZ R0,ROTATE ;repeat this process for 5 time

0049 22               50     RET

                      51     ;----------------------------------

004A 7805             52     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

004C 79A0             53     MOV R1,#160D ; R1= 160

004E 900528           54     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

0051 E4               55     RPT:CLR A ; A = 0

0052 93               56     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 01:01:47 PAGE     2

0053 67               57     XRL A,@R1 ; XOR with the actual password

                      58     ;if both the numbers are equal then A = 0;

0054 7035             59     JNZ FAIL ; jump to FAIL where we decide what will happen

0056 09               60     INC R1

0057 A3               61     INC DPTR

0058 D8F7             62     DJNZ R0,RPT ;repeat this process for 5 times

005A 115D             63     ACALL SUCCESS

005C 22               64     RET

                      65     

                      66     

005D 3186             67     SUCCESS:ACALL CLRSCR

005F 3159             68     ACALL DELAY2

0061 900547           69     MOV DPTR,#TEXT_S1

0064 112D             70     ACALL SEND_DAT ;display corret password

0066 3159             71     ACALL DELAY2

0068 314B             72     ACALL LINE2

006A 900556           73     MOV DPTR,#TEXT_S2

006D 112D             74     ACALL SEND_DAT ;display corret password

006F 3159             75     ACALL DELAY2

0071 D2A3             76     SETB P2.3

0073 C2A4             77     CLR P2.4 ;ROTATE MOTOR CLOCK WISE TO OPEN DOOR

0075 3170             78     ACALL DELAY3 ; GIVE 10 SECOND DELAY

0077 3186             79     ACALL CLRSCR

0079 900563           80     MOV DPTR, #TEXT_S3

007C 112D             81     ACALL SEND_DAT

007E 3159             82     ACALL DELAY2

0080 C2A3             83     CLR P2.3

0082 D2A4             84     SETB P2.4;ROTATE MOTOR ACW TO CLOSE DOOR

0084 3170             85     ACALL DELAY3; GIVE 10 SECOND DELAY

0086 C2A4             86     CLR P2.4

0088 7D03             87     MOV R5,#3D

008A 22               88     RET

                      89     

                      90     

                      91     

                      92     

008B 3186             93     FAIL:ACALL CLRSCR 

008D 90052E           94     MOV DPTR,#TEXT_F1 

0090 112D             95     ACALL SEND_DAT ;display incorrect text

0092 3159             96     ACALL DELAY2

0094 314B             97     ACALL LINE2

0096 900539           98     MOV DPTR, #TEXT_F2

0099 112D             99     ACALL SEND_DAT ;display incorrect text

009B 3159            100     ACALL DELAY2

009D ED              101     MOV A,R5

009E DD02            102     DJNZ R5,LOOP

00A0 11A5            103     ACALL ALERT

00A2 020002          104     LOOP:LJMP MAIN ;go to main funtion

                     105     

00A5 7A05            106     ALERT:MOV R2,#5H

00A7 3186            107     ACALL CLRSCR

00A9 900570          108     MOV DPTR, #ALERT_TEXT

00AC 112D            109     ACALL SEND_DAT

00AE 3159            110     ACALL DELAY2

00B0 C2A6            111     BUZZ:CLR P2.6

00B2 3159            112     ACALL DELAY2

00B4 D2A6            113     SETB P2.6

00B6 3159            114     ACALL DELAY2

00B8 DAF6            115     DJNZ R2, BUZZ

00BA 7D03            116     MOV R5,#3D

00BC 22              117     RET

                     118     ;--------------------------------------------------

                     119     ;algorithm to check for key scan

00BD 7590FF          120     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                     121     ;CHECKING FOR ROW 1 COLUMN 1

00C0 C290            122     CLR P1.0  ;first row checking #11111110

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 01:01:47 PAGE     3

00C2 209403          123     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

00C5 7437            124     MOV A,#55D ; if above fails then 7 is pressed , A =7

00C7 22              125     RET 

                     126     

00C8 209503          127     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

00CB 7438            128     MOV A,#56D ; A = 8

00CD 22              129     RET

                     130     

00CE 209603          131     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

00D1 7439            132     MOV A,#57D ; A=9                  

00D3 22              133     RET

                     134     

00D4 209703          135     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

00D7 742F            136     MOV A,#47D  ; A=/ DIVIDE

00D9 22              137     RET

                     138     

00DA D290            139     NEXT4:SETB P1.0 ; ROW 1 IS RESET

00DC C291            140     CLR P1.1 ;CHECK FOR ROW 2

00DE 209403          141     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

00E1 7434            142     MOV A,#52D ; A = 4

00E3 22              143     RET

                     144     

00E4 209503          145     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

00E7 7435            146     MOV A,#53D      ;A = 5

00E9 22              147     RET

                     148     

00EA 209603          149     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

00ED 7436            150     MOV A,#54D ;A = 6

00EF 22              151     RET

                     152     

00F0 209703          153     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

00F3 742A            154     MOV A,#42D ; A = * 

00F5 22              155     RET

                     156     

00F6 D291            157     NEXT8:SETB P1.1 ;ROW IS RESET

00F8 C292            158     CLR P1.2 ; CHECK FOR ROW 3

00FA 209403          159     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

00FD 7431            160     MOV A,#49D  ;A = 1

00FF 22              161     RET

                     162     

0100 209503          163     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

0103 7432            164     MOV A,#50D ;A =2 

0105 22              165     RET

                     166     

0106 209603          167     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

0109 7433            168     MOV A,#51D ;A = 3

010B 22              169     RET

                     170     

010C 209703          171     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

010F 742D            172     MOV A,#45D ;A = -

0111 22              173     RET

                     174     

0112 D292            175     NEXT12:SETB P1.2 ; ROW 3 IS RESET

0114 C293            176     CLR P1.3 ; CHECK FOR ROW 4

0116 209403          177     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

0119 7443            178     MOV A,#67D ; A = C

011B 22              179     RET

                     180     

011C 209503          181     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

011F 7430            182     MOV A,#48D ; A = 0

0121 22              183     RET

                     184     

0122 209603          185     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

0125 743D            186     MOV A,#61D       ; A = '='

0127 22              187     RET

                     188     

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 01:01:47 PAGE     4

0128 209703          189     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

012B 742B            190     MOV A,#43D ; A = +

012D 22              191     RET

012E 0200BD          192     NEXT16:LJMP KEY_SCAN ; again check for keys

                     193     ;!!!!!!!!!!!!!!!!!!!!!!!!!!CHECK FOR SJMP OPTION

                     194     ;-----------------------------------------------

                     195     

0131 F5B0            196     COMNWRT:MOV P3,A

0133 C2A0            197     CLR P2.0

0135 C2A1            198     CLR P2.1

0137 D2A2            199     SETB P2.2

0139 3150            200     ACALL DELAY

013B C2A2            201     CLR P2.2

013D 22              202     RET

                     203     

013E F5B0            204     DATAWRT: MOV P3,A

0140 D2A0            205     SETB P2.0

0142 C2A1            206     CLR P2.1

0144 D2A2            207     SETB P2.2

0146 3150            208     ACALL DELAY

0148 C2A2            209     CLR P2.2

014A 22              210     RET

                     211     

014B 74C0            212     LINE2: MOV A,#0C0H

014D 3131            213     ACALL COMNWRT

014F 22              214     RET

                     215     

                     216     ;---------------------------------

0150 7B41            217     DELAY: MOV R3,#65

0152 7CFF            218     HERE2: MOV R4,#255

0154 DCFE            219     HERE: DJNZ R4,HERE

0156 DBFA            220     DJNZ R3,HERE2

0158 22              221     RET

                     222     

0159 7BFA            223     DELAY2: MOV R3,#250D

015B 758901          224              MOV TMOD,#01

015E 758CFC          225     BACK2:   MOV TH0,#0FCH 

0161 758A18          226             MOV TL0,#018H 

0164 D28C            227             SETB TR0 

0166 308DFD          228     HERE5:  JNB TF0,HERE5

0169 C28C            229             CLR TR0 

016B C28D            230             CLR TF0 

016D DBEF            231             DJNZ R3,BACK2

016F 22              232             RET   

                     233     

0170 758910          234     DELAY3:MOV TMOD,#10H ;Timer 1, mod 1

0173 7B78            235     MOV R3,#120 ;cnter for multiple delay

0175 758B08          236     AGAIN1: MOV TL1,#08H ;TL1=08,low byte of timer

0178 758D01          237     MOV TH1,#01H ;TH1=01,high byte

017B D28E            238     SETB TR1 ;Start timer 1

017D 308FFD          239     BACK: JNB TF1,BACK ;until timer rolls over

0180 C28E            240     CLR TR1 ;Stop the timer 1

0182 C28F            241     CLR TF1 ;clear Timer 1 flag

0184 DBEF            242     DJNZ R3,AGAIN1 ;if R3 not zero then 

                     243     ;reload time

                     244     

                     245     

0186 7401            246     CLRSCR: MOV A,#01H

0188 3131            247     ACALL COMNWRT

018A 22              248     RET

                     249     

0500                 250     ORG 500H

0500 380E0106        251     MYDATA: DB 38H,0EH,01,06,80H,0; 

0504 8000                    
                     252     ;initializer 5 X 7 MATRIX lcd

                     253     ;display on cursor blinking

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 01:01:47 PAGE     5

                     254     ;clear the display screen

                     255     ;cursor shift --> towards right

                     256     ;start from the first line

0506 454E5445        257     INITIAL_MSG:   DB "ENTER 5-DIG.CODE",0

050A 5220352D                
050E 4449472E                
0512 434F4445                
0516 00                      
0517 43484543        258     CHECK_CODE_MSG:  DB "CHECKING CODE...",0        

051B 4B494E47                
051F 20434F44                
0523 452E2E2E                
0527 00                      
0528 31323334        259     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

052C 3500                    
052E 57524F4E        260     TEXT_F1: DB "WRONG CODE",0

0532 4720434F                
0536 444500                  
0539 41434345        261     TEXT_F2: DB "ACCESS DENIED",0

053D 53532044                
0541 454E4945                
0545 4400                    
0547 41434345        262     TEXT_S1: DB "ACCESS GRANTED",0

054B 53532047                
054F 52414E54                
0553 454400                  
0556 4F50454E        263     TEXT_S2: DB "OPENING DOOR",0

055A 494E4720                
055E 444F4F52                
0562 00                      
0563 434C4F53        264     TEXT_S3: DB "CLOSING DOOR", 0

0567 494E4720                
056B 444F4F52                
056F 00                      
0570 494E5452        265     ALERT_TEXT: DB "INTRUDER ALERT !"

0574 55444552                
0578 20414C45                
057C 52542021                
                     266     END

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 01:01:47 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   0038H   A   
AGAIN1 . . . . . .  C ADDR   0175H   A   
ALERT. . . . . . .  C ADDR   00A5H   A   
ALERT_TEXT . . . .  C ADDR   0570H   A   
BACK . . . . . . .  C ADDR   017DH   A   
BACK2. . . . . . .  C ADDR   015EH   A   
BUZZ . . . . . . .  C ADDR   00B0H   A   
C1 . . . . . . . .  C ADDR   0021H   A   
CHECK_CODE_MSG . .  C ADDR   0517H   A   
CHECK_PASSWORD . .  C ADDR   004AH   A   
CLRSCR . . . . . .  C ADDR   0186H   A   
COMNWRT. . . . . .  C ADDR   0131H   A   
DAT. . . . . . . .  C ADDR   002CH   A   
DATAWRT. . . . . .  C ADDR   013EH   A   
DELAY. . . . . . .  C ADDR   0150H   A   
DELAY2 . . . . . .  C ADDR   0159H   A   
DELAY3 . . . . . .  C ADDR   0170H   A   
FAIL . . . . . . .  C ADDR   008BH   A   
HERE . . . . . . .  C ADDR   0154H   A   
HERE2. . . . . . .  C ADDR   0152H   A   
HERE5. . . . . . .  C ADDR   0166H   A   
INITIAL_MSG. . . .  C ADDR   0506H   A   
KEY_SCAN . . . . .  C ADDR   00BDH   A   
LCD_INIT . . . . .  C ADDR   001EH   A   
LINE2. . . . . . .  C ADDR   014BH   A   
LOOP . . . . . . .  C ADDR   00A2H   A   
MAIN . . . . . . .  C ADDR   0002H   A   
MYDATA . . . . . .  C ADDR   0500H   A   
NEXT1. . . . . . .  C ADDR   00C8H   A   
NEXT10 . . . . . .  C ADDR   0106H   A   
NEXT11 . . . . . .  C ADDR   010CH   A   
NEXT12 . . . . . .  C ADDR   0112H   A   
NEXT13 . . . . . .  C ADDR   011CH   A   
NEXT14 . . . . . .  C ADDR   0122H   A   
NEXT15 . . . . . .  C ADDR   0128H   A   
NEXT16 . . . . . .  C ADDR   012EH   A   
NEXT2. . . . . . .  C ADDR   00CEH   A   
NEXT3. . . . . . .  C ADDR   00D4H   A   
NEXT4. . . . . . .  C ADDR   00DAH   A   
NEXT5. . . . . . .  C ADDR   00E4H   A   
NEXT6. . . . . . .  C ADDR   00EAH   A   
NEXT7. . . . . . .  C ADDR   00F0H   A   
NEXT8. . . . . . .  C ADDR   00F6H   A   
NEXT9. . . . . . .  C ADDR   0100H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0528H   A   
READ_KEYPRESS. . .  C ADDR   0039H   A   
ROTATE . . . . . .  C ADDR   003DH   A   
RPT. . . . . . . .  C ADDR   0051H   A   
SEND_DAT . . . . .  C ADDR   002DH   A   
SUCCESS. . . . . .  C ADDR   005DH   A   
TEXT_F1. . . . . .  C ADDR   052EH   A   
TEXT_F2. . . . . .  C ADDR   0539H   A   
TEXT_S1. . . . . .  C ADDR   0547H   A   
TEXT_S2. . . . . .  C ADDR   0556H   A   
TEXT_S3. . . . . .  C ADDR   0563H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 01:01:47 PAGE     7

TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
