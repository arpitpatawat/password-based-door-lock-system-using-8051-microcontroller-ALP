A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 00:41:54 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

                       2     ;--------------------------------

0000 7D03              3     MOV R5,#3D

0002                   4     MAIN:

0002 111E              5     ACALL LCD_INIT ; initialize LCD

0004 900506            6     MOV DPTR,#INITIAL_MSG ;DPTR point to initial text

0007 112D              7     ACALL SEND_DAT ;DISPLAY DPTR content on LCD

0009 3147              8     ACALL DELAY ;GIVE DELAY 

000B 3142              9     ACALL LINE2 ;MOVE TO LINE 2

000D 1139             10     ACALL READ_KEYPRESS ;take input from keypad

000F 3147             11     ACALL DELAY ;give some delay

0011 317D             12     ACALL CLRSCR ; clear our screen

0013 900517           13     MOV DPTR, #CHECK_CODE_MSG

0016 112D             14     ACALL SEND_DAT

0018 3150             15     ACALL DELAY2

001A 114A             16     ACALL CHECK_PASSWORD  ;CHECK for correct password

001C 80E4             17     SJMP MAIN 

                      18     ;---------------------------------

001E 900500           19     LCD_INIT:MOV DPTR,#MYDATA

0021 E4               20     C1:CLR A

0022 93               21     MOVC A,@A+DPTR

0023 6007             22     JZ DAT

0025 3128             23     ACALL COMNWRT

0027 3147             24     ACALL  DELAY

0029 A3               25     INC DPTR

002A 80F5             26     SJMP C1

002C 22               27     DAT:RET

                      28     ;---------------------------------

002D                  29     SEND_DAT:  

002D E4               30     CLR A

002E 93               31     MOVC A,@A+DPTR

002F 6007             32     JZ AGAIN

0031 3135             33     ACALL DATAWRT

0033 3147             34     ACALL DELAY

0035 A3               35     INC DPTR

0036 80F5             36     SJMP SEND_DAT

0038 22               37     AGAIN: RET

                      38     

                      39     ;--------------------------------- 

0039                  40     READ_KEYPRESS:

0039 7805             41     MOV R0,#5D  ; R0 = 5

003B 79A0             42     MOV R1,#160D ; R1= 160

003D 11B4             43     ROTATE:ACALL KEY_SCAN   ;take the input key

003F F7               44     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

0040 3135             45     ACALL DATAWRT ; display the key on LCD

0042 3150             46     ACALL DELAY2 ; delay

0044 3150             47     ACALL DELAY2 ;!!!!!!!!!! TWO DELAYS NEED TO MODIFY !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                             !!!!!!

0046 09               48     INC R1

0047 D8F4             49     DJNZ R0,ROTATE ;repeat this process for 5 time

0049 22               50     RET

                      51     ;----------------------------------

004A 7805             52     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

004C 79A0             53     MOV R1,#160D ; R1= 160

004E 900528           54     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

0051 E4               55     RPT:CLR A ; A = 0

0052 93               56     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 00:41:54 PAGE     2

0053 67               57     XRL A,@R1 ; XOR with the actual password

                      58     ;if both the numbers are equal then A = 0;

0054 7035             59     JNZ FAIL ; jump to FAIL where we decide what will happen

0056 09               60     INC R1

0057 A3               61     INC DPTR

0058 D8F7             62     DJNZ R0,RPT ;repeat this process for 5 times

005A 115D             63     ACALL SUCCESS

005C 22               64     RET

                      65     

                      66     

005D 317D             67     SUCCESS:ACALL CLRSCR

005F 3150             68     ACALL DELAY2

0061 900547           69     MOV DPTR,#TEXT_S1

0064 112D             70     ACALL SEND_DAT ;display corret password

0066 3150             71     ACALL DELAY2

0068 3142             72     ACALL LINE2

006A 900556           73     MOV DPTR,#TEXT_S2

006D 112D             74     ACALL SEND_DAT ;display corret password

006F 3150             75     ACALL DELAY2

0071 D2A3             76     SETB P2.3

0073 C2A4             77     CLR P2.4 ;ROTATE MOTOR CLOCK WISE TO OPEN DOOR

0075 3167             78     ACALL DELAY3 ; GIVE 10 SECOND DELAY

0077 317D             79     ACALL CLRSCR

0079 900563           80     MOV DPTR, #TEXT_S3

007C 112D             81     ACALL SEND_DAT

007E 3150             82     ACALL DELAY2

0080 C2A3             83     CLR P2.3

0082 D2A4             84     SETB P2.4;ROTATE MOTOR ACW TO CLOSE DOOR

0084 3167             85     ACALL DELAY3; GIVE 10 SECOND DELAY

0086 C2A4             86     CLR P2.4

0088 7D03             87     MOV R5,#3D

008A 22               88     RET

                      89     

                      90     

                      91     

                      92     

008B 317D             93     FAIL:ACALL CLRSCR 

008D 90052E           94     MOV DPTR,#TEXT_F1 

0090 112D             95     ACALL SEND_DAT ;display incorrect text

0092 3150             96     ACALL DELAY2

0094 3142             97     ACALL LINE2

0096 900539           98     MOV DPTR, #TEXT_F2

0099 112D             99     ACALL SEND_DAT ;display incorrect text

009B 3150            100     ACALL DELAY2

009D ED              101     MOV A,R5

009E DD02            102     DJNZ R5,LOOP

00A0 11A5            103     ACALL ALERT

00A2 020002          104     LOOP:LJMP MAIN ;go to main funtion

                     105     

00A5 7A05            106     ALERT:MOV R2,#5H

00A7 C2A6            107     BUZZ:CLR P2.6

00A9 3150            108     ACALL DELAY2

00AB D2A6            109     SETB P2.6

00AD 3150            110     ACALL DELAY2

00AF DAF6            111     DJNZ R2, BUZZ

00B1 7D03            112     MOV R5,#3D

00B3 22              113     RET

                     114     ;--------------------------------------------------

                     115     ;algorithm to check for key scan

00B4 7590FF          116     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                     117     ;CHECKING FOR ROW 1 COLUMN 1

00B7 C290            118     CLR P1.0  ;first row checking #11111110

00B9 209403          119     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

00BC 7437            120     MOV A,#55D ; if above fails then 7 is pressed , A =7

00BE 22              121     RET 

                     122     

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 00:41:54 PAGE     3

00BF 209503          123     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

00C2 7438            124     MOV A,#56D ; A = 8

00C4 22              125     RET

                     126     

00C5 209603          127     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

00C8 7439            128     MOV A,#57D ; A=9                  

00CA 22              129     RET

                     130     

00CB 209703          131     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

00CE 742F            132     MOV A,#47D  ; A=/ DIVIDE

00D0 22              133     RET

                     134     

00D1 D290            135     NEXT4:SETB P1.0 ; ROW 1 IS RESET

00D3 C291            136     CLR P1.1 ;CHECK FOR ROW 2

00D5 209403          137     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

00D8 7434            138     MOV A,#52D ; A = 4

00DA 22              139     RET

                     140     

00DB 209503          141     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

00DE 7435            142     MOV A,#53D      ;A = 5

00E0 22              143     RET

                     144     

00E1 209603          145     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

00E4 7436            146     MOV A,#54D ;A = 6

00E6 22              147     RET

                     148     

00E7 209703          149     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

00EA 742A            150     MOV A,#42D ; A = * 

00EC 22              151     RET

                     152     

00ED D291            153     NEXT8:SETB P1.1 ;ROW IS RESET

00EF C292            154     CLR P1.2 ; CHECK FOR ROW 3

00F1 209403          155     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

00F4 7431            156     MOV A,#49D  ;A = 1

00F6 22              157     RET

                     158     

00F7 209503          159     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

00FA 7432            160     MOV A,#50D ;A =2 

00FC 22              161     RET

                     162     

00FD 209603          163     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

0100 7433            164     MOV A,#51D ;A = 3

0102 22              165     RET

                     166     

0103 209703          167     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

0106 742D            168     MOV A,#45D ;A = -

0108 22              169     RET

                     170     

0109 D292            171     NEXT12:SETB P1.2 ; ROW 3 IS RESET

010B C293            172     CLR P1.3 ; CHECK FOR ROW 4

010D 209403          173     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

0110 7443            174     MOV A,#67D ; A = C

0112 22              175     RET

                     176     

0113 209503          177     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

0116 7430            178     MOV A,#48D ; A = 0

0118 22              179     RET

                     180     

0119 209603          181     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

011C 743D            182     MOV A,#61D       ; A = '='

011E 22              183     RET

                     184     

011F 209703          185     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

0122 742B            186     MOV A,#43D ; A = +

0124 22              187     RET

0125 0200B4          188     NEXT16:LJMP KEY_SCAN ; again check for keys

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 00:41:54 PAGE     4

                     189     ;!!!!!!!!!!!!!!!!!!!!!!!!!!CHECK FOR SJMP OPTION

                     190     ;-----------------------------------------------

                     191     

0128 F5B0            192     COMNWRT:MOV P3,A

012A C2A0            193     CLR P2.0

012C C2A1            194     CLR P2.1

012E D2A2            195     SETB P2.2

0130 3147            196     ACALL DELAY

0132 C2A2            197     CLR P2.2

0134 22              198     RET

                     199     

0135 F5B0            200     DATAWRT: MOV P3,A

0137 D2A0            201     SETB P2.0

0139 C2A1            202     CLR P2.1

013B D2A2            203     SETB P2.2

013D 3147            204     ACALL DELAY

013F C2A2            205     CLR P2.2

0141 22              206     RET

                     207     

0142 74C0            208     LINE2: MOV A,#0C0H

0144 3128            209     ACALL COMNWRT

0146 22              210     RET

                     211     

                     212     ;---------------------------------

0147 7B41            213     DELAY: MOV R3,#65

0149 7CFF            214     HERE2: MOV R4,#255

014B DCFE            215     HERE: DJNZ R4,HERE

014D DBFA            216     DJNZ R3,HERE2

014F 22              217     RET

                     218     

0150 7BFA            219     DELAY2: MOV R3,#250D

0152 758901          220              MOV TMOD,#01

0155 758CFC          221     BACK2:   MOV TH0,#0FCH 

0158 758A18          222             MOV TL0,#018H 

015B D28C            223             SETB TR0 

015D 308DFD          224     HERE5:  JNB TF0,HERE5

0160 C28C            225             CLR TR0 

0162 C28D            226             CLR TF0 

0164 DBEF            227             DJNZ R3,BACK2

0166 22              228             RET   

                     229     

0167 758910          230     DELAY3:MOV TMOD,#10H ;Timer 1, mod 1

016A 7B78            231     MOV R3,#120 ;cnter for multiple delay

016C 758B08          232     AGAIN1: MOV TL1,#08H ;TL1=08,low byte of timer

016F 758D01          233     MOV TH1,#01H ;TH1=01,high byte

0172 D28E            234     SETB TR1 ;Start timer 1

0174 308FFD          235     BACK: JNB TF1,BACK ;until timer rolls over

0177 C28E            236     CLR TR1 ;Stop the timer 1

0179 C28F            237     CLR TF1 ;clear Timer 1 flag

017B DBEF            238     DJNZ R3,AGAIN1 ;if R3 not zero then 

                     239     ;reload time

                     240     

                     241     

017D 7401            242     CLRSCR: MOV A,#01H

017F 3128            243     ACALL COMNWRT

0181 22              244     RET

                     245     

0500                 246     ORG 500H

0500 380E0106        247     MYDATA: DB 38H,0EH,01,06,80H,0; 

0504 8000                    
                     248     ;initializer 5 X 7 MATRIX lcd

                     249     ;display on cursor blinking

                     250     ;clear the display screen

                     251     ;cursor shift --> towards right

                     252     ;start from the first line

0506 454E5445        253     INITIAL_MSG:   DB "ENTER 5-DIG.CODE",0

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 00:41:54 PAGE     5

050A 5220352D                
050E 4449472E                
0512 434F4445                
0516 00                      
0517 43484543        254     CHECK_CODE_MSG:  DB "CHECKING CODE...",0        

051B 4B494E47                
051F 20434F44                
0523 452E2E2E                
0527 00                      
0528 31323334        255     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

052C 3500                    
052E 57524F4E        256     TEXT_F1: DB "WRONG CODE",0

0532 4720434F                
0536 444500                  
0539 41434345        257     TEXT_F2: DB "ACCESS DENIED",0

053D 53532044                
0541 454E4945                
0545 4400                    
0547 41434345        258     TEXT_S1: DB "ACCESS GRANTED",0

054B 53532047                
054F 52414E54                
0553 454400                  
0556 4F50454E        259     TEXT_S2: DB "OPENING DOOR",0

055A 494E4720                
055E 444F4F52                
0562 00                      
0563 434C4F53        260     TEXT_S3: DB "CLOSING DOOR", 0

0567 494E4720                
056B 444F4F52                
056F 00                      
                     261     END

A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 00:41:54 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   0038H   A   
AGAIN1 . . . . . .  C ADDR   016CH   A   
ALERT. . . . . . .  C ADDR   00A5H   A   
BACK . . . . . . .  C ADDR   0174H   A   
BACK2. . . . . . .  C ADDR   0155H   A   
BUZZ . . . . . . .  C ADDR   00A7H   A   
C1 . . . . . . . .  C ADDR   0021H   A   
CHECK_CODE_MSG . .  C ADDR   0517H   A   
CHECK_PASSWORD . .  C ADDR   004AH   A   
CLRSCR . . . . . .  C ADDR   017DH   A   
COMNWRT. . . . . .  C ADDR   0128H   A   
DAT. . . . . . . .  C ADDR   002CH   A   
DATAWRT. . . . . .  C ADDR   0135H   A   
DELAY. . . . . . .  C ADDR   0147H   A   
DELAY2 . . . . . .  C ADDR   0150H   A   
DELAY3 . . . . . .  C ADDR   0167H   A   
FAIL . . . . . . .  C ADDR   008BH   A   
HERE . . . . . . .  C ADDR   014BH   A   
HERE2. . . . . . .  C ADDR   0149H   A   
HERE5. . . . . . .  C ADDR   015DH   A   
INITIAL_MSG. . . .  C ADDR   0506H   A   
KEY_SCAN . . . . .  C ADDR   00B4H   A   
LCD_INIT . . . . .  C ADDR   001EH   A   
LINE2. . . . . . .  C ADDR   0142H   A   
LOOP . . . . . . .  C ADDR   00A2H   A   
MAIN . . . . . . .  C ADDR   0002H   A   
MYDATA . . . . . .  C ADDR   0500H   A   
NEXT1. . . . . . .  C ADDR   00BFH   A   
NEXT10 . . . . . .  C ADDR   00FDH   A   
NEXT11 . . . . . .  C ADDR   0103H   A   
NEXT12 . . . . . .  C ADDR   0109H   A   
NEXT13 . . . . . .  C ADDR   0113H   A   
NEXT14 . . . . . .  C ADDR   0119H   A   
NEXT15 . . . . . .  C ADDR   011FH   A   
NEXT16 . . . . . .  C ADDR   0125H   A   
NEXT2. . . . . . .  C ADDR   00C5H   A   
NEXT3. . . . . . .  C ADDR   00CBH   A   
NEXT4. . . . . . .  C ADDR   00D1H   A   
NEXT5. . . . . . .  C ADDR   00DBH   A   
NEXT6. . . . . . .  C ADDR   00E1H   A   
NEXT7. . . . . . .  C ADDR   00E7H   A   
NEXT8. . . . . . .  C ADDR   00EDH   A   
NEXT9. . . . . . .  C ADDR   00F7H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0528H   A   
READ_KEYPRESS. . .  C ADDR   0039H   A   
ROTATE . . . . . .  C ADDR   003DH   A   
RPT. . . . . . . .  C ADDR   0051H   A   
SEND_DAT . . . . .  C ADDR   002DH   A   
SUCCESS. . . . . .  C ADDR   005DH   A   
TEXT_F1. . . . . .  C ADDR   052EH   A   
TEXT_F2. . . . . .  C ADDR   0539H   A   
TEXT_S1. . . . . .  C ADDR   0547H   A   
TEXT_S2. . . . . .  C ADDR   0556H   A   
TEXT_S3. . . . . .  C ADDR   0563H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
A51 MACRO ASSEMBLER  PROJECT                                                              10/02/2021 00:41:54 PAGE     7

TH1. . . . . . . .  D ADDR   008DH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
