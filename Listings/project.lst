A51 MACRO ASSEMBLER  PROJECT                                                              10/04/2021 10:39:12 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

0000 C2A7              2     CLR P2.7 ; port 2.7 will be used for buzzer

0002 7D03              3     MOV R5,#3D ;number of attempts

                       4     ;--------------------------------

0004                   5     MAIN:

0004 1120              6     ACALL LCD_INIT ; initialize LCD

0006 900506            7     MOV DPTR,#INITIAL_MSG ;DPTR point to initial text

0009 112F              8     ACALL SEND_DAT ;DISPLAY DPTR content on LCD

000B 3173              9     ACALL DELAY ;GIVE DELAY 

000D 316E             10     ACALL LINE2 ;MOVE TO LINE 2

000F 113B             11     ACALL READ_KEYPRESS ;take input from keypad

0011 3173             12     ACALL DELAY ;give some delay

0013 31AA             13     ACALL CLRSCR ; clear our screen

0015 900517           14     MOV DPTR, #CHECK_CODE_MSG ;send checking code.. msg to lcd

0018 112F             15     ACALL SEND_DAT

001A 317C             16     ACALL DELAY2

001C 114C             17     ACALL CHECK_PASSWORD  ;CHECK for correct password

001E 80E4             18     SJMP MAIN ;short jump to main

                      19     ;---------------------------------

0020 900500           20     LCD_INIT:MOV DPTR,#MYDATA

0023 E4               21     C1:CLR A

0024 93               22     MOVC A,@A+DPTR

0025 6007             23     JZ DAT

0027 3154             24     ACALL COMNWRT

0029 3173             25     ACALL  DELAY

002B A3               26     INC DPTR

002C 80F5             27     SJMP C1

002E 22               28     DAT:RET

                      29     ;---------------------------------

002F                  30     SEND_DAT:  

002F E4               31     CLR A

0030 93               32     MOVC A,@A+DPTR

0031 6007             33     JZ AGAIN

0033 3161             34     ACALL DATAWRT

0035 3173             35     ACALL DELAY

0037 A3               36     INC DPTR

0038 80F5             37     SJMP SEND_DAT

003A 22               38     AGAIN: RET

                      39     ;--------------------------------- 

003B                  40     READ_KEYPRESS:

003B 7805             41     MOV R0,#5D  ; R0 = 5

003D 79A0             42     MOV R1,#160D ; R1= 160

003F 11E0             43     ROTATE:ACALL KEY_SCAN   ;take the input key

0041 F7               44     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

0042 3161             45     ACALL DATAWRT ; display the key on LCD

0044 317C             46     ACALL DELAY2 ; delay

0046 317C             47     ACALL DELAY2 ;

0048 09               48     INC R1

0049 D8F4             49     DJNZ R0,ROTATE ;repeat this process for 5 time

004B 22               50     RET

                      51     ;----------------------------------

004C 7805             52     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

004E 79A0             53     MOV R1,#160D ; R1= 160

0050 900528           54     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

0053 E4               55     RPT:CLR A ; A = 0

0054 93               56     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

0055 67               57     XRL A,@R1 ; XOR with the actual password

A51 MACRO ASSEMBLER  PROJECT                                                              10/04/2021 10:39:12 PAGE     2

                      58     ;if both the numbers are equal then A = 0;

0056 703D             59     JNZ FAIL ; jump to FAIL where we decide what will happen

0058 09               60     INC R1

0059 A3               61     INC DPTR

005A D8F7             62     DJNZ R0,RPT ;repeat this process for 5 times

005C 115F             63     ACALL SUCCESS

005E 22               64     RET

                      65     ;-----------------------------------

005F 31AA             66     SUCCESS:ACALL CLRSCR

0061 317C             67     ACALL DELAY2

0063 900547           68     MOV DPTR,#TEXT_S1

0066 112F             69     ACALL SEND_DAT ;display correct password

0068 317C             70     ACALL DELAY2

006A 316E             71     ACALL LINE2

006C 900556           72     MOV DPTR,#TEXT_S2

006F 112F             73     ACALL SEND_DAT ;display opening door

0071 317C             74     ACALL DELAY2

0073 C2A3             75     CLR P2.3

0075 C2A4             76     CLR P2.4 

                      77     ;ROTATE MOTOR CLOCK WISE 90 degree TO OPEN DOOR

0077 3193             78     ACALL DELAY3 ; GIVE SECOND DELAY

0079 31AA             79     ACALL CLRSCR

007B 900563           80     MOV DPTR, #TEXT_S3

007E 112F             81     ACALL SEND_DAT

0080 317C             82     ACALL DELAY2

0082 3193             83     ACALL DELAY3; GIVE SECOND DELAY

0084 D2A3             84     SETB P2.3 ;rotate motor antin clock wise

0086 C2A5             85     CLR P2.5

0088 317C             86     ACALL DELAY2

008A D2A3             87     SETB P2.3 ;initial position 

008C D2A4             88     SETB P2.4

008E D2A5             89     SETB P2.5

0090 D2A6             90     SETB P2.6

0092 7D03             91     MOV R5,#3D ;reset attempts value

0094 22               92     RET

                      93     ;----------------------------

0095 31AA             94     FAIL:ACALL CLRSCR 

0097 90052E           95     MOV DPTR,#TEXT_F1 

009A 112F             96     ACALL SEND_DAT ;display incorrect text

009C 317C             97     ACALL DELAY2

009E 316E             98     ACALL LINE2

00A0 900539           99     MOV DPTR, #TEXT_F2

00A3 112F            100     ACALL SEND_DAT ;display access denied text

00A5 317C            101     ACALL DELAY2

00A7 DD02            102     DJNZ R5,LOOP

00A9 11C6            103     ACALL ALERT

00AB 11B0            104     LOOP: ACALL ATTEMPT

00AD 020004          105     LJMP MAIN ;go to main funtion

                     106     ;------------------------------

00B0 31AA            107     ATTEMPT: ACALL CLRSCR

00B2 900581          108     MOV DPTR,#ATTEMPT_TEXT ;number of attempts left

00B5 112F            109     ACALL SEND_DAT

00B7 317C            110     ACALL DELAY2

00B9 7430            111     MOV A,#48D ; 48 = 0

00BB 2D              112     ADD A,R5

00BC D4              113     DA A

00BD 3161            114     ACALL DATAWRT

00BF 3173            115     ACALL DELAY

00C1 317C            116     ACALL DELAY2

00C3 317C            117     ACALL DELAY2 ;

00C5 22              118     RET

                     119     ;-------------------------------

00C6 7A0A            120     ALERT:MOV R2,#10D

00C8 31AA            121     ACALL CLRSCR

00CA 900570          122     MOV DPTR, #ALERT_TEXT ;display alert text

00CD 112F            123     ACALL SEND_DAT

A51 MACRO ASSEMBLER  PROJECT                                                              10/04/2021 10:39:12 PAGE     3

00CF 317C            124     ACALL DELAY2

00D1 D2A7            125     BUZZ:SETB P2.7 ;buzzer will turn on and off 10 times

00D3 317C            126     ACALL DELAY2

00D5 C2A7            127     CLR P2.7

00D7 317C            128     ACALL DELAY2

00D9 DAF6            129     DJNZ R2, BUZZ

00DB 7D03            130     MOV R5,#3D

00DD 020004          131     LJMP MAIN

                     132     ;--------------------------------------------------

                     133     ;algorithm to check for key scan

00E0 7590FF          134     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                     135     ;CHECKING FOR ROW 1 COLUMN 1

00E3 C290            136     CLR P1.0  ;first row checking #11111110

00E5 209403          137     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

00E8 7437            138     MOV A,#55D ; if above fails then 7 is pressed , A =7

00EA 22              139     RET 

                     140     

00EB 209503          141     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

00EE 7438            142     MOV A,#56D ; A = 8

00F0 22              143     RET

                     144     

00F1 209603          145     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

00F4 7439            146     MOV A,#57D ; A=9                  

00F6 22              147     RET

                     148     

00F7 209703          149     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

00FA 742F            150     MOV A,#47D  ; A=/ DIVIDE

00FC 22              151     RET

                     152     

00FD D290            153     NEXT4:SETB P1.0 ; ROW 1 IS RESET

00FF C291            154     CLR P1.1 ;CHECK FOR ROW 2

0101 209403          155     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

0104 7434            156     MOV A,#52D ; A = 4

0106 22              157     RET

                     158     

0107 209503          159     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

010A 7435            160     MOV A,#53D      ;A = 5

010C 22              161     RET

                     162     

010D 209603          163     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

0110 7436            164     MOV A,#54D ;A = 6

0112 22              165     RET

                     166     

0113 209703          167     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

0116 742A            168     MOV A,#42D ; A = * 

0118 22              169     RET

                     170     

0119 D291            171     NEXT8:SETB P1.1 ;ROW IS RESET

011B C292            172     CLR P1.2 ; CHECK FOR ROW 3

011D 209403          173     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

0120 7431            174     MOV A,#49D  ;A = 1

0122 22              175     RET

                     176     

0123 209503          177     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

0126 7432            178     MOV A,#50D ;A =2 

0128 22              179     RET

                     180     

0129 209603          181     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

012C 7433            182     MOV A,#51D ;A = 3

012E 22              183     RET

                     184     

012F 209703          185     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

0132 742D            186     MOV A,#45D ;A = -

0134 22              187     RET

                     188     

0135 D292            189     NEXT12:SETB P1.2 ; ROW 3 IS RESET

A51 MACRO ASSEMBLER  PROJECT                                                              10/04/2021 10:39:12 PAGE     4

0137 C293            190     CLR P1.3 ; CHECK FOR ROW 4

0139 209403          191     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

013C 7443            192     MOV A,#67D ; A = C

013E 22              193     RET

                     194     

013F 209503          195     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

0142 7430            196     MOV A,#48D ; A = 0

0144 22              197     RET

                     198     

0145 209603          199     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

0148 743D            200     MOV A,#61D       ; A = '='

014A 22              201     RET

                     202     

014B 209703          203     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

014E 742B            204     MOV A,#43D ; A = +

0150 22              205     RET

0151 0200E0          206     NEXT16:LJMP KEY_SCAN ; again check for keys

                     207     ;-----------------------------------------------

                     208     

0154 F5B0            209     COMNWRT:MOV P3,A  ;to send command

0156 C2A0            210     CLR P2.0 ; R/s = 0

0158 C2A1            211     CLR P2.1 ;R/w =0

015A D2A2            212     SETB P2.2 ;high

015C 3173            213     ACALL DELAY ; delay

015E C2A2            214     CLR P2.2 ;low

0160 22              215     RET

                     216     

0161 F5B0            217     DATAWRT: MOV P3,A  ;to send data

0163 D2A0            218     SETB P2.0

0165 C2A1            219     CLR P2.1

0167 D2A2            220     SETB P2.2

0169 3173            221     ACALL DELAY

016B C2A2            222     CLR P2.2

016D 22              223     RET

                     224     ;-------------------------------------------------

016E 74C0            225     LINE2: MOV A,#0C0H ;move to line 2 of LCD

0170 3154            226     ACALL COMNWRT

0172 22              227     RET

                     228     

                     229     ;---------------------------------

0173 7B41            230     DELAY: MOV R3,#65 ; r3 = 65 , m = 1

0175 7CFF            231     HERE2: MOV R4,#255 ;r4 = 255 , m =1

0177 DCFE            232     HERE: DJNZ R4,HERE ; m = 2

0179 DBFA            233     DJNZ R3,HERE2 ;m =2

017B 22              234     RET ;m =2

                     235     ;for here loop , 2 * 255 * 1.085 uS = 553.35 us

                     236     ;HERE 2 loop repeats HERE loop 65 times then  553.35 us * 65 = 35967.75uS

                     237     ;mov r4 is also repating 65 times  and djnz r3 too so 3 * 65 * 1.085 us = 211uS

                     238     ;for return 2 * 1.085 = 2.17uS

                     239     ;total machine cycle = 35967.75 + 211 + 2.17 = 36180.92 uS

                     240     ;time delay = 0.036 S

                     241      

                     242     ;------------------------------------------

017C 7BFA            243     DELAY2: MOV R3,#250D ; R3  = 250

017E 758901          244             MOV TMOD,#01 ; timer 0 mode 1

0181 758CFC          245     BACK2:  MOV TH0,#0FCH 

0184 758A18          246             MOV TL0,#018H  ;initial count value = FC18 is loaded into timer

0187 D28C            247             SETB TR0 ;starting timer

0189 308DFD          248     HERE5:  JNB TF0,HERE5 ;monitor Timer flag if it is 1

018C C28C            249             CLR TR0 ; stop the timer

018E C28D            250             CLR TF0 ; reset the timer flag

0190 DBEF            251             DJNZ R3,BACK2 ; repeat this process 250 times

0192 22              252             RET  

                     253     ;COUNT = 65535 - 64536 + 1 = 1000

                     254     ; 1000 * 1.085 uS = 1085 uS

                     255     ; 1085uS * 250 = 0.271 S

A51 MACRO ASSEMBLER  PROJECT                                                              10/04/2021 10:39:12 PAGE     5

                     256     ;--------------------------------------------

                     257     

0193 758910          258     DELAY3:MOV TMOD,#10H ;Timer 1, mod 1

0196 7B46            259     MOV R3,#70 ; for multiple delay

0198 758B00          260     AGAIN1: MOV TL1,#00H ;TL1=08,low byte of timer

019B 758D00          261     MOV TH1,#00H ;TH1=01,high byte , TIMER = 0000

019E D28E            262     SETB TR1 ;Start timer 1

01A0 308FFD          263     BACK: JNB TF1,BACK ;until timer rolls over

01A3 C28E            264     CLR TR1 ;Stop the timer 1

01A5 C28F            265     CLR TF1 ;clear Timer 1 flag

01A7 DBEF            266     DJNZ R3,AGAIN1 ;if R3 not zero then

01A9 22              267     RET

                     268     ;COUNT = 65535 - 0000 + 1 = 65536

                     269     ;65536 * 1.085 uS = 71.1065mS

                     270     ;71.1065 mS * 70 = 4977.45mS = 5S

                     271     

                     272     ;-----------------------------------------

01AA 7401            273     CLRSCR: MOV A,#01H

01AC 3154            274     ACALL COMNWRT

01AE 22              275     RET

                     276     ;----------------------------------------

0500                 277     ORG 500H

0500 380E0106        278     MYDATA: DB 38H,0EH,01,06,80H,0; 

0504 8000                    
                     279     ;initializer 5 X 7 MATRIX lcd

                     280     ;display on cursor blinking

                     281     ;clear the display screen

                     282     ;cursor shift --> towards right

                     283     ;start from the first line

0506 454E5445        284     INITIAL_MSG:   DB "ENTER 5-DIG.CODE",0

050A 5220352D                
050E 4449472E                
0512 434F4445                
0516 00                      
0517 43484543        285     CHECK_CODE_MSG:  DB "CHECKING CODE...",0        

051B 4B494E47                
051F 20434F44                
0523 452E2E2E                
0527 00                      
0528 31323334        286     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

052C 3500                    
052E 57524F4E        287     TEXT_F1: DB "WRONG CODE",0

0532 4720434F                
0536 444500                  
0539 41434345        288     TEXT_F2: DB "ACCESS DENIED",0

053D 53532044                
0541 454E4945                
0545 4400                    
0547 41434345        289     TEXT_S1: DB "ACCESS GRANTED",0

054B 53532047                
054F 52414E54                
0553 454400                  
0556 4F50454E        290     TEXT_S2: DB "OPENING DOOR",0

055A 494E4720                
055E 444F4F52                
0562 00                      
0563 434C4F53        291     TEXT_S3: DB "CLOSING DOOR", 0

0567 494E4720                
056B 444F4F52                
056F 00                      
0570 494E5452        292     ALERT_TEXT: DB "INTRUDER ALERT !",0

0574 55444552                
0578 20414C45                
057C 52542021                
0580 00                      
0581 41545445        293     ATTEMPT_TEXT: DB "ATTEMPTS LEFT:0",0

A51 MACRO ASSEMBLER  PROJECT                                                              10/04/2021 10:39:12 PAGE     6

0585 4D505453                
0589 204C4546                
058D 543A3000                
                     294     END

A51 MACRO ASSEMBLER  PROJECT                                                              10/04/2021 10:39:12 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   003AH   A   
AGAIN1 . . . . . .  C ADDR   0198H   A   
ALERT. . . . . . .  C ADDR   00C6H   A   
ALERT_TEXT . . . .  C ADDR   0570H   A   
ATTEMPT. . . . . .  C ADDR   00B0H   A   
ATTEMPT_TEXT . . .  C ADDR   0581H   A   
BACK . . . . . . .  C ADDR   01A0H   A   
BACK2. . . . . . .  C ADDR   0181H   A   
BUZZ . . . . . . .  C ADDR   00D1H   A   
C1 . . . . . . . .  C ADDR   0023H   A   
CHECK_CODE_MSG . .  C ADDR   0517H   A   
CHECK_PASSWORD . .  C ADDR   004CH   A   
CLRSCR . . . . . .  C ADDR   01AAH   A   
COMNWRT. . . . . .  C ADDR   0154H   A   
DAT. . . . . . . .  C ADDR   002EH   A   
DATAWRT. . . . . .  C ADDR   0161H   A   
DELAY. . . . . . .  C ADDR   0173H   A   
DELAY2 . . . . . .  C ADDR   017CH   A   
DELAY3 . . . . . .  C ADDR   0193H   A   
FAIL . . . . . . .  C ADDR   0095H   A   
HERE . . . . . . .  C ADDR   0177H   A   
HERE2. . . . . . .  C ADDR   0175H   A   
HERE5. . . . . . .  C ADDR   0189H   A   
INITIAL_MSG. . . .  C ADDR   0506H   A   
KEY_SCAN . . . . .  C ADDR   00E0H   A   
LCD_INIT . . . . .  C ADDR   0020H   A   
LINE2. . . . . . .  C ADDR   016EH   A   
LOOP . . . . . . .  C ADDR   00ABH   A   
MAIN . . . . . . .  C ADDR   0004H   A   
MYDATA . . . . . .  C ADDR   0500H   A   
NEXT1. . . . . . .  C ADDR   00EBH   A   
NEXT10 . . . . . .  C ADDR   0129H   A   
NEXT11 . . . . . .  C ADDR   012FH   A   
NEXT12 . . . . . .  C ADDR   0135H   A   
NEXT13 . . . . . .  C ADDR   013FH   A   
NEXT14 . . . . . .  C ADDR   0145H   A   
NEXT15 . . . . . .  C ADDR   014BH   A   
NEXT16 . . . . . .  C ADDR   0151H   A   
NEXT2. . . . . . .  C ADDR   00F1H   A   
NEXT3. . . . . . .  C ADDR   00F7H   A   
NEXT4. . . . . . .  C ADDR   00FDH   A   
NEXT5. . . . . . .  C ADDR   0107H   A   
NEXT6. . . . . . .  C ADDR   010DH   A   
NEXT7. . . . . . .  C ADDR   0113H   A   
NEXT8. . . . . . .  C ADDR   0119H   A   
NEXT9. . . . . . .  C ADDR   0123H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0528H   A   
READ_KEYPRESS. . .  C ADDR   003BH   A   
ROTATE . . . . . .  C ADDR   003FH   A   
RPT. . . . . . . .  C ADDR   0053H   A   
SEND_DAT . . . . .  C ADDR   002FH   A   
SUCCESS. . . . . .  C ADDR   005FH   A   
TEXT_F1. . . . . .  C ADDR   052EH   A   
TEXT_F2. . . . . .  C ADDR   0539H   A   
TEXT_S1. . . . . .  C ADDR   0547H   A   
TEXT_S2. . . . . .  C ADDR   0556H   A   
TEXT_S3. . . . . .  C ADDR   0563H   A   
A51 MACRO ASSEMBLER  PROJECT                                                              10/04/2021 10:39:12 PAGE     8

TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
