A51 MACRO ASSEMBLER  PROJECT                                                              10/03/2021 14:40:40 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

0000 C2A7              2     CLR P2.7 ; port 2.7 will be used for buzzer

0002 7D03              3     MOV R5,#3D ;number of attempts

                       4     ;--------------------------------

0004                   5     MAIN:

0004 1120              6     ACALL LCD_INIT ; initialize LCD

0006 900506            7     MOV DPTR,#INITIAL_MSG ;DPTR point to initial text

0009 112F              8     ACALL SEND_DAT ;DISPLAY DPTR content on LCD

000B 3169              9     ACALL DELAY ;GIVE DELAY 

000D 3164             10     ACALL LINE2 ;MOVE TO LINE 2

000F 113B             11     ACALL READ_KEYPRESS ;take input from keypad

0011 3169             12     ACALL DELAY ;give some delay

0013 319F             13     ACALL CLRSCR ; clear our screen

0015 900517           14     MOV DPTR, #CHECK_CODE_MSG

0018 112F             15     ACALL SEND_DAT

001A 3172             16     ACALL DELAY2

001C 114C             17     ACALL CHECK_PASSWORD  ;CHECK for correct password

001E 80E4             18     SJMP MAIN 

                      19     ;---------------------------------

0020 900500           20     LCD_INIT:MOV DPTR,#MYDATA

0023 E4               21     C1:CLR A

0024 93               22     MOVC A,@A+DPTR

0025 6007             23     JZ DAT

0027 314A             24     ACALL COMNWRT

0029 3169             25     ACALL  DELAY

002B A3               26     INC DPTR

002C 80F5             27     SJMP C1

002E 22               28     DAT:RET

                      29     ;---------------------------------

002F                  30     SEND_DAT:  

002F E4               31     CLR A

0030 93               32     MOVC A,@A+DPTR

0031 6007             33     JZ AGAIN

0033 3157             34     ACALL DATAWRT

0035 3169             35     ACALL DELAY

0037 A3               36     INC DPTR

0038 80F5             37     SJMP SEND_DAT

003A 22               38     AGAIN: RET

                      39     ;--------------------------------- 

003B                  40     READ_KEYPRESS:

003B 7805             41     MOV R0,#5D  ; R0 = 5

003D 79A0             42     MOV R1,#160D ; R1= 160

003F 11D6             43     ROTATE:ACALL KEY_SCAN   ;take the input key

0041 F7               44     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

0042 3157             45     ACALL DATAWRT ; display the key on LCD

0044 3172             46     ACALL DELAY2 ; delay

0046 3172             47     ACALL DELAY2 ;

0048 09               48     INC R1

0049 D8F4             49     DJNZ R0,ROTATE ;repeat this process for 5 time

004B 22               50     RET

                      51     ;----------------------------------

004C 7805             52     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

004E 79A0             53     MOV R1,#160D ; R1= 160

0050 900528           54     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

0053 E4               55     RPT:CLR A ; A = 0

0054 93               56     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

0055 67               57     XRL A,@R1 ; XOR with the actual password

A51 MACRO ASSEMBLER  PROJECT                                                              10/03/2021 14:40:40 PAGE     2

                      58     ;if both the numbers are equal then A = 0;

0056 7033             59     JNZ FAIL ; jump to FAIL where we decide what will happen

0058 09               60     INC R1

0059 A3               61     INC DPTR

005A D8F7             62     DJNZ R0,RPT ;repeat this process for 5 times

005C 115F             63     ACALL SUCCESS

005E 22               64     RET

                      65     ;-----------------------------------

005F 319F             66     SUCCESS:ACALL CLRSCR

0061 3172             67     ACALL DELAY2

0063 900547           68     MOV DPTR,#TEXT_S1

0066 112F             69     ACALL SEND_DAT ;display corret password

0068 3172             70     ACALL DELAY2

006A 3164             71     ACALL LINE2

006C 900556           72     MOV DPTR,#TEXT_S2

006F 112F             73     ACALL SEND_DAT ;display corret password

0071 3172             74     ACALL DELAY2

0073 C2A3             75     CLR P2.3

0075 C2A4             76     CLR P2.4 

                      77     ;ROTATE MOTOR CLOCK WISE TO OPEN DOOR

0077 3189             78     ACALL DELAY3 ; GIVE SECOND DELAY

0079 319F             79     ACALL CLRSCR

007B 900563           80     MOV DPTR, #TEXT_S3

007E 112F             81     ACALL SEND_DAT

0080 3172             82     ACALL DELAY2

0082 3189             83     ACALL DELAY3; GIVE SECOND DELAY

0084 D2A3             84     SETB P2.3

0086 C2A5             85     CLR P2.5

0088 7D03             86     MOV R5,#3H

008A 22               87     RET

                      88     ;----------------------------

008B 319F             89     FAIL:ACALL CLRSCR 

008D 90052E           90     MOV DPTR,#TEXT_F1 

0090 112F             91     ACALL SEND_DAT ;display incorrect text

0092 3172             92     ACALL DELAY2

0094 3164             93     ACALL LINE2

0096 900539           94     MOV DPTR, #TEXT_F2

0099 112F             95     ACALL SEND_DAT ;display incorrect text

009B 3172             96     ACALL DELAY2

                      97     ;MOV A,R5

009D DD02             98     DJNZ R5,LOOP

009F 11BC             99     ACALL ALERT

00A1 11A6            100     LOOP: ACALL ATTEMPT

00A3 020004          101     LJMP MAIN ;go to main funtion

                     102     ;------------------------------

00A6 319F            103     ATTEMPT: ACALL CLRSCR

00A8 900581          104     MOV DPTR,#ATTEMPT_TEXT

00AB 112F            105     ACALL SEND_DAT

00AD 3172            106     ACALL DELAY2

00AF 7430            107     MOV A,#48D

00B1 2D              108     ADD A,R5

00B2 D4              109     DA A

                     110     ;MOV A ,R5

00B3 3157            111     ACALL DATAWRT

00B5 3169            112     ACALL DELAY

00B7 3172            113     ACALL DELAY2

00B9 3172            114     ACALL DELAY2 ;

00BB 22              115     RET

                     116     ;-------------------------------

00BC 7A0A            117     ALERT:MOV R2,#10D

00BE 319F            118     ACALL CLRSCR

00C0 900570          119     MOV DPTR, #ALERT_TEXT

00C3 112F            120     ACALL SEND_DAT

00C5 3172            121     ACALL DELAY2

00C7 D2A7            122     BUZZ:SETB P2.7

00C9 3172            123     ACALL DELAY2

A51 MACRO ASSEMBLER  PROJECT                                                              10/03/2021 14:40:40 PAGE     3

00CB C2A7            124     CLR P2.7

00CD 3172            125     ACALL DELAY2

00CF DAF6            126     DJNZ R2, BUZZ

00D1 7D03            127     MOV R5,#3D

00D3 020004          128     LJMP MAIN

                     129     ;--------------------------------------------------

                     130     ;algorithm to check for key scan

00D6 7590FF          131     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                     132     ;CHECKING FOR ROW 1 COLUMN 1

00D9 C290            133     CLR P1.0  ;first row checking #11111110

00DB 209403          134     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

00DE 7437            135     MOV A,#55D ; if above fails then 7 is pressed , A =7

00E0 22              136     RET 

                     137     

00E1 209503          138     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

00E4 7438            139     MOV A,#56D ; A = 8

00E6 22              140     RET

                     141     

00E7 209603          142     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

00EA 7439            143     MOV A,#57D ; A=9                  

00EC 22              144     RET

                     145     

00ED 209703          146     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

00F0 742F            147     MOV A,#47D  ; A=/ DIVIDE

00F2 22              148     RET

                     149     

00F3 D290            150     NEXT4:SETB P1.0 ; ROW 1 IS RESET

00F5 C291            151     CLR P1.1 ;CHECK FOR ROW 2

00F7 209403          152     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

00FA 7434            153     MOV A,#52D ; A = 4

00FC 22              154     RET

                     155     

00FD 209503          156     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

0100 7435            157     MOV A,#53D      ;A = 5

0102 22              158     RET

                     159     

0103 209603          160     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

0106 7436            161     MOV A,#54D ;A = 6

0108 22              162     RET

                     163     

0109 209703          164     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

010C 742A            165     MOV A,#42D ; A = * 

010E 22              166     RET

                     167     

010F D291            168     NEXT8:SETB P1.1 ;ROW IS RESET

0111 C292            169     CLR P1.2 ; CHECK FOR ROW 3

0113 209403          170     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

0116 7431            171     MOV A,#49D  ;A = 1

0118 22              172     RET

                     173     

0119 209503          174     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

011C 7432            175     MOV A,#50D ;A =2 

011E 22              176     RET

                     177     

011F 209603          178     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

0122 7433            179     MOV A,#51D ;A = 3

0124 22              180     RET

                     181     

0125 209703          182     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

0128 742D            183     MOV A,#45D ;A = -

012A 22              184     RET

                     185     

012B D292            186     NEXT12:SETB P1.2 ; ROW 3 IS RESET

012D C293            187     CLR P1.3 ; CHECK FOR ROW 4

012F 209403          188     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

0132 7443            189     MOV A,#67D ; A = C

A51 MACRO ASSEMBLER  PROJECT                                                              10/03/2021 14:40:40 PAGE     4

0134 22              190     RET

                     191     

0135 209503          192     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

0138 7430            193     MOV A,#48D ; A = 0

013A 22              194     RET

                     195     

013B 209603          196     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

013E 743D            197     MOV A,#61D       ; A = '='

0140 22              198     RET

                     199     

0141 209703          200     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

0144 742B            201     MOV A,#43D ; A = +

0146 22              202     RET

0147 0200D6          203     NEXT16:LJMP KEY_SCAN ; again check for keys

                     204     ;!!!!!!!!!!!!!!!!!!!!!!!!!!CHECK FOR SJMP OPTION

                     205     ;-----------------------------------------------

                     206     

014A F5B0            207     COMNWRT:MOV P3,A

014C C2A0            208     CLR P2.0 ; R/s = 0

014E C2A1            209     CLR P2.1 ;R/w =0

0150 D2A2            210     SETB P2.2 ;high

0152 3169            211     ACALL DELAY ; delay

0154 C2A2            212     CLR P2.2 ;low

0156 22              213     RET

                     214     

0157 F5B0            215     DATAWRT: MOV P3,A

0159 D2A0            216     SETB P2.0

015B C2A1            217     CLR P2.1

015D D2A2            218     SETB P2.2

015F 3169            219     ACALL DELAY

0161 C2A2            220     CLR P2.2

0163 22              221     RET

                     222     ;-------------------------------------------------

0164 74C0            223     LINE2: MOV A,#0C0H

0166 314A            224     ACALL COMNWRT

0168 22              225     RET

                     226     

                     227     ;---------------------------------

0169 7B41            228     DELAY: MOV R3,#65

016B 7CFF            229     HERE2: MOV R4,#255

016D DCFE            230     HERE: DJNZ R4,HERE

016F DBFA            231     DJNZ R3,HERE2

0171 22              232     RET

                     233     

0172 7BFA            234     DELAY2: MOV R3,#250D

0174 758901          235              MOV TMOD,#01

0177 758CFC          236     BACK2:   MOV TH0,#0FCH 

017A 758A18          237             MOV TL0,#018H 

017D D28C            238             SETB TR0 

017F 308DFD          239     HERE5:  JNB TF0,HERE5

0182 C28C            240             CLR TR0 

0184 C28D            241             CLR TF0 

0186 DBEF            242             DJNZ R3,BACK2

0188 22              243             RET   

                     244     

0189 758910          245     DELAY3:MOV TMOD,#10H ;Timer 1, mod 1

018C 7B3C            246     MOV R3,#60 ;cnter for multiple delay

018E 758B08          247     AGAIN1: MOV TL1,#08H ;TL1=08,low byte of timer

0191 758D01          248     MOV TH1,#01H ;TH1=01,high byte

0194 D28E            249     SETB TR1 ;Start timer 1

0196 308FFD          250     BACK: JNB TF1,BACK ;until timer rolls over

0199 C28E            251     CLR TR1 ;Stop the timer 1

019B C28F            252     CLR TF1 ;clear Timer 1 flag

019D DBEF            253     DJNZ R3,AGAIN1 ;if R3 not zero then 

                     254     ;reload time

                     255     

A51 MACRO ASSEMBLER  PROJECT                                                              10/03/2021 14:40:40 PAGE     5

                     256     ;-----------------------------------------

019F 7401            257     CLRSCR: MOV A,#01H

01A1 314A            258     ACALL COMNWRT

01A3 22              259     RET

                     260     ;----------------------------------------

0500                 261     ORG 500H

0500 380E0106        262     MYDATA: DB 38H,0EH,01,06,80H,0; 

0504 8000                    
                     263     ;initializer 5 X 7 MATRIX lcd

                     264     ;display on cursor blinking

                     265     ;clear the display screen

                     266     ;cursor shift --> towards right

                     267     ;start from the first line

0506 454E5445        268     INITIAL_MSG:   DB "ENTER 5-DIG.CODE",0

050A 5220352D                
050E 4449472E                
0512 434F4445                
0516 00                      
0517 43484543        269     CHECK_CODE_MSG:  DB "CHECKING CODE...",0        

051B 4B494E47                
051F 20434F44                
0523 452E2E2E                
0527 00                      
0528 31323334        270     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

052C 3500                    
052E 57524F4E        271     TEXT_F1: DB "WRONG CODE",0

0532 4720434F                
0536 444500                  
0539 41434345        272     TEXT_F2: DB "ACCESS DENIED",0

053D 53532044                
0541 454E4945                
0545 4400                    
0547 41434345        273     TEXT_S1: DB "ACCESS GRANTED",0

054B 53532047                
054F 52414E54                
0553 454400                  
0556 4F50454E        274     TEXT_S2: DB "OPENING DOOR",0

055A 494E4720                
055E 444F4F52                
0562 00                      
0563 434C4F53        275     TEXT_S3: DB "CLOSING DOOR", 0

0567 494E4720                
056B 444F4F52                
056F 00                      
0570 494E5452        276     ALERT_TEXT: DB "INTRUDER ALERT !",0

0574 55444552                
0578 20414C45                
057C 52542021                
0580 00                      
0581 41545445        277     ATTEMPT_TEXT: DB "ATTEMPTS LEFT:0",0

0585 4D505453                
0589 204C4546                
058D 543A3000                
0591 353637          278     ATTEMPT_VALUE: DB 53D,54D,55D

                     279     END

A51 MACRO ASSEMBLER  PROJECT                                                              10/03/2021 14:40:40 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   003AH   A   
AGAIN1 . . . . . .  C ADDR   018EH   A   
ALERT. . . . . . .  C ADDR   00BCH   A   
ALERT_TEXT . . . .  C ADDR   0570H   A   
ATTEMPT. . . . . .  C ADDR   00A6H   A   
ATTEMPT_TEXT . . .  C ADDR   0581H   A   
ATTEMPT_VALUE. . .  C ADDR   0591H   A   
BACK . . . . . . .  C ADDR   0196H   A   
BACK2. . . . . . .  C ADDR   0177H   A   
BUZZ . . . . . . .  C ADDR   00C7H   A   
C1 . . . . . . . .  C ADDR   0023H   A   
CHECK_CODE_MSG . .  C ADDR   0517H   A   
CHECK_PASSWORD . .  C ADDR   004CH   A   
CLRSCR . . . . . .  C ADDR   019FH   A   
COMNWRT. . . . . .  C ADDR   014AH   A   
DAT. . . . . . . .  C ADDR   002EH   A   
DATAWRT. . . . . .  C ADDR   0157H   A   
DELAY. . . . . . .  C ADDR   0169H   A   
DELAY2 . . . . . .  C ADDR   0172H   A   
DELAY3 . . . . . .  C ADDR   0189H   A   
FAIL . . . . . . .  C ADDR   008BH   A   
HERE . . . . . . .  C ADDR   016DH   A   
HERE2. . . . . . .  C ADDR   016BH   A   
HERE5. . . . . . .  C ADDR   017FH   A   
INITIAL_MSG. . . .  C ADDR   0506H   A   
KEY_SCAN . . . . .  C ADDR   00D6H   A   
LCD_INIT . . . . .  C ADDR   0020H   A   
LINE2. . . . . . .  C ADDR   0164H   A   
LOOP . . . . . . .  C ADDR   00A1H   A   
MAIN . . . . . . .  C ADDR   0004H   A   
MYDATA . . . . . .  C ADDR   0500H   A   
NEXT1. . . . . . .  C ADDR   00E1H   A   
NEXT10 . . . . . .  C ADDR   011FH   A   
NEXT11 . . . . . .  C ADDR   0125H   A   
NEXT12 . . . . . .  C ADDR   012BH   A   
NEXT13 . . . . . .  C ADDR   0135H   A   
NEXT14 . . . . . .  C ADDR   013BH   A   
NEXT15 . . . . . .  C ADDR   0141H   A   
NEXT16 . . . . . .  C ADDR   0147H   A   
NEXT2. . . . . . .  C ADDR   00E7H   A   
NEXT3. . . . . . .  C ADDR   00EDH   A   
NEXT4. . . . . . .  C ADDR   00F3H   A   
NEXT5. . . . . . .  C ADDR   00FDH   A   
NEXT6. . . . . . .  C ADDR   0103H   A   
NEXT7. . . . . . .  C ADDR   0109H   A   
NEXT8. . . . . . .  C ADDR   010FH   A   
NEXT9. . . . . . .  C ADDR   0119H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0528H   A   
READ_KEYPRESS. . .  C ADDR   003BH   A   
ROTATE . . . . . .  C ADDR   003FH   A   
RPT. . . . . . . .  C ADDR   0053H   A   
SEND_DAT . . . . .  C ADDR   002FH   A   
SUCCESS. . . . . .  C ADDR   005FH   A   
TEXT_F1. . . . . .  C ADDR   052EH   A   
TEXT_F2. . . . . .  C ADDR   0539H   A   
TEXT_S1. . . . . .  C ADDR   0547H   A   
TEXT_S2. . . . . .  C ADDR   0556H   A   
A51 MACRO ASSEMBLER  PROJECT                                                              10/03/2021 14:40:40 PAGE     7

TEXT_S3. . . . . .  C ADDR   0563H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
