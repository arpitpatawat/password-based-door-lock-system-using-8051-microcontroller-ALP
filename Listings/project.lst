A51 MACRO ASSEMBLER  PROJECT                                                              10/01/2021 21:00:30 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.asm SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H

                       2     ;--------------------------------

0000                   3     MAIN:

0000 111C              4     ACALL LCD_INIT ; initialize LCD

0002 900506            5     MOV DPTR,#INITIAL_MSG ;DPTR point to initial text

0005 112B              6     ACALL SEND_DAT ;DISPLAY DPTR content on LCD

0007 312C              7     ACALL DELAY ;GIVE DELAY 

0009 3127              8     ACALL LINE2 ;MOVE TO LINE 2

000B 1137              9     ACALL READ_KEYPRESS ;take input from keypad

000D 312C             10     ACALL DELAY ;give some delay

000F 3162             11     ACALL CLRSCR ; clear our screen

0011 900517           12     MOV DPTR, #CHECK_CODE_MSG

0014 112B             13     ACALL SEND_DAT

0016 3135             14     ACALL DELAY2

0018 1146             15     ACALL CHECK_PASSWORD  ;CHECK for correct password

001A 80E4             16     SJMP MAIN 

                      17     ;---------------------------------

001C 900500           18     LCD_INIT:MOV DPTR,#MYDATA

001F E4               19     C1:CLR A

0020 93               20     MOVC A,@A+DPTR

0021 6007             21     JZ DAT

0023 310D             22     ACALL COMNWRT

0025 312C             23     ACALL  DELAY

0027 A3               24     INC DPTR

0028 80F5             25     SJMP C1

002A 22               26     DAT:RET

                      27     ;---------------------------------

002B                  28     SEND_DAT:  

002B E4               29     CLR A

002C 93               30     MOVC A,@A+DPTR

002D 6007             31     JZ AGAIN

002F 311A             32     ACALL DATAWRT

0031 312C             33     ACALL DELAY

0033 A3               34     INC DPTR

0034 80F5             35     SJMP SEND_DAT

0036 22               36     AGAIN: RET

                      37     

                      38     ;--------------------------------- 

0037                  39     READ_KEYPRESS:

0037 7805             40     MOV R0,#5D  ; R0 = 5

0039 79A0             41     MOV R1,#160D ; R1= 160

003B 1199             42     ROTATE:ACALL KEY_SCAN   ;take the input key

003D F7               43     MOV @R1,A ;take the key pressed value and store at address of R1 i.e. 160

003E 311A             44     ACALL DATAWRT ; display the key on LCD

0040 3135             45     ACALL DELAY2 ; delay

0042 09               46     INC R1

0043 D8F6             47     DJNZ R0,ROTATE ;repeat this process for 5 time

0045 22               48     RET

                      49     ;----------------------------------

0046 7805             50     CHECK_PASSWORD:MOV R0,#5D  ;R0 = 5

0048 79A0             51     MOV R1,#160D ; R1= 160

004A 900528           52     MOV DPTR,#PASSWORD ;DPTR Point to actual PASSWORD

004D E4               53     RPT:CLR A ; A = 0

004E 93               54     MOVC A,@A+DPTR ; A = FIRST NUMBER OF THE ACTUAL PASSWORD

004F 67               55     XRL A,@R1 ; XOR with the actual password

                      56     ;if both the numbers are equal then A = 0;

0050 7033             57     JNZ FAIL ; jump to FAIL where we decide what will happen

A51 MACRO ASSEMBLER  PROJECT                                                              10/01/2021 21:00:30 PAGE     2

0052 09               58     INC R1

0053 A3               59     INC DPTR

0054 D8F7             60     DJNZ R0,RPT ;repeat this process for 5 times

0056 1159             61     ACALL SUCCESS

0058 22               62     RET

                      63     

                      64     

0059 3162             65     SUCCESS:ACALL CLRSCR

005B 3135             66     ACALL DELAY2

005D 900547           67     MOV DPTR,#TEXT_S1

0060 112B             68     ACALL SEND_DAT ;display corret password

0062 3135             69     ACALL DELAY2

0064 3127             70     ACALL LINE2

0066 900556           71     MOV DPTR,#TEXT_S2

0069 112B             72     ACALL SEND_DAT ;display corret password

006B 3135             73     ACALL DELAY2

006D D2A3             74     SETB P2.3

006F C2A4             75     CLR P2.4 ;ROTATE MOTOR CLOCK WISE TO OPEN DOOR

0071 314C             76     ACALL DELAY3 ; GIVE 10 SECOND DELAY

0073 3162             77     ACALL CLRSCR

0075 900563           78     MOV DPTR, #TEXT_S3

0078 112B             79     ACALL SEND_DAT

007A 3135             80     ACALL DELAY2

007C C2A3             81     CLR P2.3

007E D2A4             82     SETB P2.4;ROTATE MOTOR ACW TO CLOSE DOOR

0080 314C             83     ACALL DELAY3; GIVE 10 SECOND DELAY

0082 C2A4             84     CLR P2.4

0084 22               85     RET

                      86     

                      87     

                      88     

                      89     

0085 3162             90     FAIL:ACALL CLRSCR 

0087 90052E           91     MOV DPTR,#TEXT_F1 

008A 112B             92     ACALL SEND_DAT ;display incorrect text

008C 3135             93     ACALL DELAY2

008E 3127             94     ACALL LINE2

0090 900539           95     MOV DPTR, #TEXT_F2

0093 112B             96     ACALL SEND_DAT ;display incorrect text

0095 3135             97     ACALL DELAY2

0097 1100             98     ACALL MAIN ;go to main funtion

                      99     

                     100     ;--------------------------------------------------

                     101     ;algorithm to check for key scan

0099 7590FF          102     KEY_SCAN:MOV P1,#11111111B  ;TAKE INPUT FROM PORT 1

                     103     ;CHECKING FOR ROW 1 COLUMN 1

009C C290            104     CLR P1.0  ;first row checking #11111110

009E 209403          105     JB P1.4, NEXT1 ;when 1 column is 1 then no button is pressed , check for next column

00A1 7437            106     MOV A,#55D ; if above fails then 7 is pressed , A =7

00A3 22              107     RET 

                     108     

00A4 209503          109     NEXT1:JB P1.5,NEXT2 ; ROW 1 COULMN 2

00A7 7438            110     MOV A,#56D ; A = 8

00A9 22              111     RET

                     112     

00AA 209603          113     NEXT2: JB P1.6,NEXT3 ; ROW 1 COLUMN 3

00AD 7439            114     MOV A,#57D ; A=9                  

00AF 22              115     RET

                     116     

00B0 209703          117     NEXT3: JB P1.7,NEXT4 ; ROW 1 COLUMN 4

00B3 742F            118     MOV A,#47D  ; A=/ DIVIDE

00B5 22              119     RET

                     120     

00B6 D290            121     NEXT4:SETB P1.0 ; ROW 1 IS RESET

00B8 C291            122     CLR P1.1 ;CHECK FOR ROW 2

00BA 209403          123     JB P1.4, NEXT5 ; ROW 2 COLUMN 1

A51 MACRO ASSEMBLER  PROJECT                                                              10/01/2021 21:00:30 PAGE     3

00BD 7434            124     MOV A,#52D ; A = 4

00BF 22              125     RET

                     126     

00C0 209503          127     NEXT5:JB P1.5,NEXT6 ; ROW 2 COLUMN 2

00C3 7435            128     MOV A,#53D      ;A = 5

00C5 22              129     RET

                     130     

00C6 209603          131     NEXT6: JB P1.6,NEXT7 ; ROW 2 COLUMN 3

00C9 7436            132     MOV A,#54D ;A = 6

00CB 22              133     RET

                     134     

00CC 209703          135     NEXT7: JB P1.7,NEXT8 ; ROW 2 COLUMN 4

00CF 742A            136     MOV A,#42D ; A = * 

00D1 22              137     RET

                     138     

00D2 D291            139     NEXT8:SETB P1.1 ;ROW IS RESET

00D4 C292            140     CLR P1.2 ; CHECK FOR ROW 3

00D6 209403          141     JB P1.4, NEXT9 ; ROW 3 COLUMN 1

00D9 7431            142     MOV A,#49D  ;A = 1

00DB 22              143     RET

                     144     

00DC 209503          145     NEXT9:JB P1.5,NEXT10 ; ROW 3 COLUMN 2

00DF 7432            146     MOV A,#50D ;A =2 

00E1 22              147     RET

                     148     

00E2 209603          149     NEXT10: JB P1.6,NEXT11 ; ROW 3 COLUMN 3

00E5 7433            150     MOV A,#51D ;A = 3

00E7 22              151     RET

                     152     

00E8 209703          153     NEXT11: JB P1.7,NEXT12 ; ROW 3 COLUMN 4

00EB 742D            154     MOV A,#45D ;A = -

00ED 22              155     RET

                     156     

00EE D292            157     NEXT12:SETB P1.2 ; ROW 3 IS RESET

00F0 C293            158     CLR P1.3 ; CHECK FOR ROW 4

00F2 209403          159     JB P1.4, NEXT13 ; ROW 4 COLUMN 1

00F5 7443            160     MOV A,#67D ; A = C

00F7 22              161     RET

                     162     

00F8 209503          163     NEXT13:JB P1.5,NEXT14; ROW 4 COLUMN 2

00FB 7430            164     MOV A,#48D ; A = 0

00FD 22              165     RET

                     166     

00FE 209603          167     NEXT14: JB P1.6,NEXT15 ; ROW 4 COLUMN 3

0101 743D            168     MOV A,#61D       ; A = '='

0103 22              169     RET

                     170     

0104 209703          171     NEXT15: JB P1.7,NEXT16; ROW 4 COLUMN 4

0107 742B            172     MOV A,#43D ; A = +

0109 22              173     RET

010A 020099          174     NEXT16:LJMP KEY_SCAN ; again check for keys

                     175     ;!!!!!!!!!!!!!!!!!!!!!!!!!!CHECK FOR SJMP OPTION

                     176     ;-----------------------------------------------

                     177     

010D F5B0            178     COMNWRT:MOV P3,A

010F C2A0            179     CLR P2.0

0111 C2A1            180     CLR P2.1

0113 D2A2            181     SETB P2.2

0115 312C            182     ACALL DELAY

0117 C2A2            183     CLR P2.2

0119 22              184     RET

                     185     

011A F5B0            186     DATAWRT: MOV P3,A

011C D2A0            187     SETB P2.0

011E C2A1            188     CLR P2.1

0120 D2A2            189     SETB P2.2

A51 MACRO ASSEMBLER  PROJECT                                                              10/01/2021 21:00:30 PAGE     4

0122 312C            190     ACALL DELAY

0124 C2A2            191     CLR P2.2

0126 22              192     RET

                     193     

0127 74C0            194     LINE2: MOV A,#0C0H

0129 310D            195     ACALL COMNWRT

012B 22              196     RET

                     197     

                     198     ;---------------------------------

012C 7B41            199     DELAY: MOV R3,#65

012E 7CFF            200     HERE2: MOV R4,#255

0130 DCFE            201     HERE: DJNZ R4,HERE

0132 DBFA            202     DJNZ R3,HERE2

0134 22              203     RET

                     204     

0135 7BFA            205     DELAY2: MOV R3,#250D

0137 758901          206              MOV TMOD,#01

013A 758CFC          207     BACK2:   MOV TH0,#0FCH 

013D 758A18          208             MOV TL0,#018H 

0140 D28C            209             SETB TR0 

0142 308DFD          210     HERE5:  JNB TF0,HERE5

0145 C28C            211             CLR TR0 

0147 C28D            212             CLR TF0 

0149 DBEF            213             DJNZ R3,BACK2

014B 22              214             RET   

                     215     

014C 758910          216     DELAY3:MOV TMOD,#10H ;Timer 1, mod 1

014F 7B78            217     MOV R3,#120 ;cnter for multiple delay

0151 758B08          218     AGAIN1: MOV TL1,#08H ;TL1=08,low byte of timer

0154 758D01          219     MOV TH1,#01H ;TH1=01,high byte

0157 D28E            220     SETB TR1 ;Start timer 1

0159 308FFD          221     BACK: JNB TF1,BACK ;until timer rolls over

015C C28E            222     CLR TR1 ;Stop the timer 1

015E C28F            223     CLR TF1 ;clear Timer 1 flag

0160 DBEF            224     DJNZ R3,AGAIN1 ;if R3 not zero then 

                     225     ;reload time

                     226     

                     227     

0162 7401            228     CLRSCR: MOV A,#01H

0164 310D            229     ACALL COMNWRT

0166 22              230     RET

                     231     

0500                 232     ORG 500H

0500 380E0106        233     MYDATA: DB 38H,0EH,01,06,80H,0; 

0504 8000                    
                     234     ;initializer 5 X 7 MATRIX lcd

                     235     ;display on cursor blinking

                     236     ;clear the display screen

                     237     ;cursor shift --> towards right

                     238     ;start from the first line

0506 454E5445        239     INITIAL_MSG:   DB "ENTER 5-DIG.CODE",0

050A 5220352D                
050E 4449472E                
0512 434F4445                
0516 00                      
0517 43484543        240     CHECK_CODE_MSG:  DB "CHECKING CODE...",0        

051B 4B494E47                
051F 20434F44                
0523 452E2E2E                
0527 00                      
0528 31323334        241     PASSWORD:DB 49D,50D,51D,52D,53D,0  ;PASSWORD = 1 2 3 4 5

052C 3500                    
052E 57524F4E        242     TEXT_F1: DB "WRONG CODE",0

0532 4720434F                
0536 444500                  
0539 41434345        243     TEXT_F2: DB "ACCESS DENIED",0

A51 MACRO ASSEMBLER  PROJECT                                                              10/01/2021 21:00:30 PAGE     5

053D 53532044                
0541 454E4945                
0545 4400                    
0547 41434345        244     TEXT_S1: DB "ACCESS GRANTED",0

054B 53532047                
054F 52414E54                
0553 454400                  
0556 4F50454E        245     TEXT_S2: DB "OPENING DOOR",0

055A 494E4720                
055E 444F4F52                
0562 00                      
0563 434C4F53        246     TEXT_S3: DB "CLOSING DOOR", 0

0567 494E4720                
056B 444F4F52                
056F 00                      
                     247     END

A51 MACRO ASSEMBLER  PROJECT                                                              10/01/2021 21:00:30 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   0036H   A   
AGAIN1 . . . . . .  C ADDR   0151H   A   
BACK . . . . . . .  C ADDR   0159H   A   
BACK2. . . . . . .  C ADDR   013AH   A   
C1 . . . . . . . .  C ADDR   001FH   A   
CHECK_CODE_MSG . .  C ADDR   0517H   A   
CHECK_PASSWORD . .  C ADDR   0046H   A   
CLRSCR . . . . . .  C ADDR   0162H   A   
COMNWRT. . . . . .  C ADDR   010DH   A   
DAT. . . . . . . .  C ADDR   002AH   A   
DATAWRT. . . . . .  C ADDR   011AH   A   
DELAY. . . . . . .  C ADDR   012CH   A   
DELAY2 . . . . . .  C ADDR   0135H   A   
DELAY3 . . . . . .  C ADDR   014CH   A   
FAIL . . . . . . .  C ADDR   0085H   A   
HERE . . . . . . .  C ADDR   0130H   A   
HERE2. . . . . . .  C ADDR   012EH   A   
HERE5. . . . . . .  C ADDR   0142H   A   
INITIAL_MSG. . . .  C ADDR   0506H   A   
KEY_SCAN . . . . .  C ADDR   0099H   A   
LCD_INIT . . . . .  C ADDR   001CH   A   
LINE2. . . . . . .  C ADDR   0127H   A   
MAIN . . . . . . .  C ADDR   0000H   A   
MYDATA . . . . . .  C ADDR   0500H   A   
NEXT1. . . . . . .  C ADDR   00A4H   A   
NEXT10 . . . . . .  C ADDR   00E2H   A   
NEXT11 . . . . . .  C ADDR   00E8H   A   
NEXT12 . . . . . .  C ADDR   00EEH   A   
NEXT13 . . . . . .  C ADDR   00F8H   A   
NEXT14 . . . . . .  C ADDR   00FEH   A   
NEXT15 . . . . . .  C ADDR   0104H   A   
NEXT16 . . . . . .  C ADDR   010AH   A   
NEXT2. . . . . . .  C ADDR   00AAH   A   
NEXT3. . . . . . .  C ADDR   00B0H   A   
NEXT4. . . . . . .  C ADDR   00B6H   A   
NEXT5. . . . . . .  C ADDR   00C0H   A   
NEXT6. . . . . . .  C ADDR   00C6H   A   
NEXT7. . . . . . .  C ADDR   00CCH   A   
NEXT8. . . . . . .  C ADDR   00D2H   A   
NEXT9. . . . . . .  C ADDR   00DCH   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PASSWORD . . . . .  C ADDR   0528H   A   
READ_KEYPRESS. . .  C ADDR   0037H   A   
ROTATE . . . . . .  C ADDR   003BH   A   
RPT. . . . . . . .  C ADDR   004DH   A   
SEND_DAT . . . . .  C ADDR   002BH   A   
SUCCESS. . . . . .  C ADDR   0059H   A   
TEXT_F1. . . . . .  C ADDR   052EH   A   
TEXT_F2. . . . . .  C ADDR   0539H   A   
TEXT_S1. . . . . .  C ADDR   0547H   A   
TEXT_S2. . . . . .  C ADDR   0556H   A   
TEXT_S3. . . . . .  C ADDR   0563H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
A51 MACRO ASSEMBLER  PROJECT                                                              10/01/2021 21:00:30 PAGE     7

TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
